/*
 * Cloud DNS Forwarder API
 * Allows configuring resources to forward DNS queries from Cloud Providers to B1DDI/NIOS
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DdiCloudDnsForwarderPrivateNetwork;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Cloud Endpoint definition.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T12:10:24.948083+05:30[Asia/Kolkata]", comments = "Generator version: 7.12.0")
public class DdiCloudDnsForwarderEndpoint {
  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DELETED_AT = "deleted_at";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime deletedAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  @javax.annotation.Nullable
  private String direction;

  public static final String SERIALIZED_NAME_DISCOVERY_CONFIG_ACCOUNT_ID = "discovery_config_account_id";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_CONFIG_ACCOUNT_ID)
  @javax.annotation.Nullable
  private String discoveryConfigAccountId;

  public static final String SERIALIZED_NAME_DNS_HOST_ID = "dns_host_id";
  @SerializedName(SERIALIZED_NAME_DNS_HOST_ID)
  @javax.annotation.Nullable
  private String dnsHostId;

  public static final String SERIALIZED_NAME_DNS_POLICY_NAME = "dns_policy_name";
  @SerializedName(SERIALIZED_NAME_DNS_POLICY_NAME)
  @javax.annotation.Nullable
  private String dnsPolicyName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_IDENTITY_ACCOUNT_ID = "identity_account_id";
  @SerializedName(SERIALIZED_NAME_IDENTITY_ACCOUNT_ID)
  @javax.annotation.Nullable
  private String identityAccountId;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  @javax.annotation.Nullable
  private Map<String, Object> metadata = new HashMap<>();

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  @javax.annotation.Nullable
  private String mode;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_PROVIDER_ENDPOINT_ID = "provider_endpoint_id";
  @SerializedName(SERIALIZED_NAME_PROVIDER_ENDPOINT_ID)
  @javax.annotation.Nullable
  private String providerEndpointId;

  public static final String SERIALIZED_NAME_PROVIDER_TYPE = "provider_type";
  @SerializedName(SERIALIZED_NAME_PROVIDER_TYPE)
  @javax.annotation.Nullable
  private String providerType;

  public static final String SERIALIZED_NAME_PROVIDER_VIRTUAL_NETWORKS = "provider_virtual_networks";
  @SerializedName(SERIALIZED_NAME_PROVIDER_VIRTUAL_NETWORKS)
  @javax.annotation.Nullable
  private List<DdiCloudDnsForwarderPrivateNetwork> providerVirtualNetworks = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private Map<String, Object> tags = new HashMap<>();

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime updatedAt;

  public DdiCloudDnsForwarderEndpoint() {
  }

  public DdiCloudDnsForwarderEndpoint(
     String id
  ) {
    this();
    this.id = id;
  }

  public DdiCloudDnsForwarderEndpoint createdAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * The timestamp when the object was created.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DdiCloudDnsForwarderEndpoint deletedAt(@javax.annotation.Nullable OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

  /**
   * The timestamp when the object has been deleted. Nil until deletion.
   * @return deletedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }

  public void setDeletedAt(@javax.annotation.Nullable OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
  }


  public DdiCloudDnsForwarderEndpoint description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * User defined description of Endpoint.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public DdiCloudDnsForwarderEndpoint direction(@javax.annotation.Nullable String direction) {
    this.direction = direction;
    return this;
  }

  /**
   * Direction indicates the type of endpoint,it should be either \&quot;inbound\&quot; / \&quot;outbound\&quot;. Empty defaults to \&quot;outbound\&quot;.
   * @return direction
   */
  @javax.annotation.Nullable
  public String getDirection() {
    return direction;
  }

  public void setDirection(@javax.annotation.Nullable String direction) {
    this.direction = direction;
  }


  public DdiCloudDnsForwarderEndpoint discoveryConfigAccountId(@javax.annotation.Nullable String discoveryConfigAccountId) {
    this.discoveryConfigAccountId = discoveryConfigAccountId;
    return this;
  }

  /**
   * The Ricketts provider account_id. Account ID for provider.
   * @return discoveryConfigAccountId
   */
  @javax.annotation.Nullable
  public String getDiscoveryConfigAccountId() {
    return discoveryConfigAccountId;
  }

  public void setDiscoveryConfigAccountId(@javax.annotation.Nullable String discoveryConfigAccountId) {
    this.discoveryConfigAccountId = discoveryConfigAccountId;
  }


  public DdiCloudDnsForwarderEndpoint dnsHostId(@javax.annotation.Nullable String dnsHostId) {
    this.dnsHostId = dnsHostId;
    return this;
  }

  /**
   * dns_host_id is the id of the DNS host that is 1:1 associated with the endpoint.
   * @return dnsHostId
   */
  @javax.annotation.Nullable
  public String getDnsHostId() {
    return dnsHostId;
  }

  public void setDnsHostId(@javax.annotation.Nullable String dnsHostId) {
    this.dnsHostId = dnsHostId;
  }


  public DdiCloudDnsForwarderEndpoint dnsPolicyName(@javax.annotation.Nullable String dnsPolicyName) {
    this.dnsPolicyName = dnsPolicyName;
    return this;
  }

  /**
   * DNS Policy name.
   * @return dnsPolicyName
   */
  @javax.annotation.Nullable
  public String getDnsPolicyName() {
    return dnsPolicyName;
  }

  public void setDnsPolicyName(@javax.annotation.Nullable String dnsPolicyName) {
    this.dnsPolicyName = dnsPolicyName;
  }


  /**
   * Primary key.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public DdiCloudDnsForwarderEndpoint identityAccountId(@javax.annotation.Nullable String identityAccountId) {
    this.identityAccountId = identityAccountId;
    return this;
  }

  /**
   * Get identityAccountId
   * @return identityAccountId
   */
  @javax.annotation.Nullable
  public String getIdentityAccountId() {
    return identityAccountId;
  }

  public void setIdentityAccountId(@javax.annotation.Nullable String identityAccountId) {
    this.identityAccountId = identityAccountId;
  }


  public DdiCloudDnsForwarderEndpoint metadata(@javax.annotation.Nullable Map<String, Object> metadata) {
    this.metadata = metadata;
    return this;
  }

  public DdiCloudDnsForwarderEndpoint putMetadataItem(String key, Object metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

  /**
   * Metadata for Endpoint object. Provider specific.
   * @return metadata
   */
  @javax.annotation.Nullable
  public Map<String, Object> getMetadata() {
    return metadata;
  }

  public void setMetadata(@javax.annotation.Nullable Map<String, Object> metadata) {
    this.metadata = metadata;
  }


  public DdiCloudDnsForwarderEndpoint mode(@javax.annotation.Nullable String mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public String getMode() {
    return mode;
  }

  public void setMode(@javax.annotation.Nullable String mode) {
    this.mode = mode;
  }


  public DdiCloudDnsForwarderEndpoint name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * User defined name given to Endpoint.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public DdiCloudDnsForwarderEndpoint providerEndpointId(@javax.annotation.Nullable String providerEndpointId) {
    this.providerEndpointId = providerEndpointId;
    return this;
  }

  /**
   * Get providerEndpointId
   * @return providerEndpointId
   */
  @javax.annotation.Nullable
  public String getProviderEndpointId() {
    return providerEndpointId;
  }

  public void setProviderEndpointId(@javax.annotation.Nullable String providerEndpointId) {
    this.providerEndpointId = providerEndpointId;
  }


  public DdiCloudDnsForwarderEndpoint providerType(@javax.annotation.Nullable String providerType) {
    this.providerType = providerType;
    return this;
  }

  /**
   * Get providerType
   * @return providerType
   */
  @javax.annotation.Nullable
  public String getProviderType() {
    return providerType;
  }

  public void setProviderType(@javax.annotation.Nullable String providerType) {
    this.providerType = providerType;
  }


  public DdiCloudDnsForwarderEndpoint providerVirtualNetworks(@javax.annotation.Nullable List<DdiCloudDnsForwarderPrivateNetwork> providerVirtualNetworks) {
    this.providerVirtualNetworks = providerVirtualNetworks;
    return this;
  }

  public DdiCloudDnsForwarderEndpoint addProviderVirtualNetworksItem(DdiCloudDnsForwarderPrivateNetwork providerVirtualNetworksItem) {
    if (this.providerVirtualNetworks == null) {
      this.providerVirtualNetworks = new ArrayList<>();
    }
    this.providerVirtualNetworks.add(providerVirtualNetworksItem);
    return this;
  }

  /**
   * Provider virtual networks asssigned to endpoint.
   * @return providerVirtualNetworks
   */
  @javax.annotation.Nullable
  public List<DdiCloudDnsForwarderPrivateNetwork> getProviderVirtualNetworks() {
    return providerVirtualNetworks;
  }

  public void setProviderVirtualNetworks(@javax.annotation.Nullable List<DdiCloudDnsForwarderPrivateNetwork> providerVirtualNetworks) {
    this.providerVirtualNetworks = providerVirtualNetworks;
  }


  public DdiCloudDnsForwarderEndpoint tags(@javax.annotation.Nullable Map<String, Object> tags) {
    this.tags = tags;
    return this;
  }

  public DdiCloudDnsForwarderEndpoint putTagsItem(String key, Object tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, Object> getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable Map<String, Object> tags) {
    this.tags = tags;
  }


  public DdiCloudDnsForwarderEndpoint updatedAt(@javax.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * The timestamp when the object has been updated. Equals to _created_at_ if not updated after creation.
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(@javax.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DdiCloudDnsForwarderEndpoint ddiCloudDnsForwarderEndpoint = (DdiCloudDnsForwarderEndpoint) o;
    return Objects.equals(this.createdAt, ddiCloudDnsForwarderEndpoint.createdAt) &&
        Objects.equals(this.deletedAt, ddiCloudDnsForwarderEndpoint.deletedAt) &&
        Objects.equals(this.description, ddiCloudDnsForwarderEndpoint.description) &&
        Objects.equals(this.direction, ddiCloudDnsForwarderEndpoint.direction) &&
        Objects.equals(this.discoveryConfigAccountId, ddiCloudDnsForwarderEndpoint.discoveryConfigAccountId) &&
        Objects.equals(this.dnsHostId, ddiCloudDnsForwarderEndpoint.dnsHostId) &&
        Objects.equals(this.dnsPolicyName, ddiCloudDnsForwarderEndpoint.dnsPolicyName) &&
        Objects.equals(this.id, ddiCloudDnsForwarderEndpoint.id) &&
        Objects.equals(this.identityAccountId, ddiCloudDnsForwarderEndpoint.identityAccountId) &&
        Objects.equals(this.metadata, ddiCloudDnsForwarderEndpoint.metadata) &&
        Objects.equals(this.mode, ddiCloudDnsForwarderEndpoint.mode) &&
        Objects.equals(this.name, ddiCloudDnsForwarderEndpoint.name) &&
        Objects.equals(this.providerEndpointId, ddiCloudDnsForwarderEndpoint.providerEndpointId) &&
        Objects.equals(this.providerType, ddiCloudDnsForwarderEndpoint.providerType) &&
        Objects.equals(this.providerVirtualNetworks, ddiCloudDnsForwarderEndpoint.providerVirtualNetworks) &&
        Objects.equals(this.tags, ddiCloudDnsForwarderEndpoint.tags) &&
        Objects.equals(this.updatedAt, ddiCloudDnsForwarderEndpoint.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, deletedAt, description, direction, discoveryConfigAccountId, dnsHostId, dnsPolicyName, id, identityAccountId, metadata, mode, name, providerEndpointId, providerType, providerVirtualNetworks, tags, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DdiCloudDnsForwarderEndpoint {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    discoveryConfigAccountId: ").append(toIndentedString(discoveryConfigAccountId)).append("\n");
    sb.append("    dnsHostId: ").append(toIndentedString(dnsHostId)).append("\n");
    sb.append("    dnsPolicyName: ").append(toIndentedString(dnsPolicyName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identityAccountId: ").append(toIndentedString(identityAccountId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    providerEndpointId: ").append(toIndentedString(providerEndpointId)).append("\n");
    sb.append("    providerType: ").append(toIndentedString(providerType)).append("\n");
    sb.append("    providerVirtualNetworks: ").append(toIndentedString(providerVirtualNetworks)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at");
    openapiFields.add("deleted_at");
    openapiFields.add("description");
    openapiFields.add("direction");
    openapiFields.add("discovery_config_account_id");
    openapiFields.add("dns_host_id");
    openapiFields.add("dns_policy_name");
    openapiFields.add("id");
    openapiFields.add("identity_account_id");
    openapiFields.add("metadata");
    openapiFields.add("mode");
    openapiFields.add("name");
    openapiFields.add("provider_endpoint_id");
    openapiFields.add("provider_type");
    openapiFields.add("provider_virtual_networks");
    openapiFields.add("tags");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DdiCloudDnsForwarderEndpoint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DdiCloudDnsForwarderEndpoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DdiCloudDnsForwarderEndpoint is not found in the empty JSON string", DdiCloudDnsForwarderEndpoint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DdiCloudDnsForwarderEndpoint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DdiCloudDnsForwarderEndpoint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DdiCloudDnsForwarderEndpoint.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("direction") != null && !jsonObj.get("direction").isJsonNull()) && !jsonObj.get("direction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direction").toString()));
      }
      if ((jsonObj.get("discovery_config_account_id") != null && !jsonObj.get("discovery_config_account_id").isJsonNull()) && !jsonObj.get("discovery_config_account_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discovery_config_account_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discovery_config_account_id").toString()));
      }
      if ((jsonObj.get("dns_host_id") != null && !jsonObj.get("dns_host_id").isJsonNull()) && !jsonObj.get("dns_host_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dns_host_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dns_host_id").toString()));
      }
      if ((jsonObj.get("dns_policy_name") != null && !jsonObj.get("dns_policy_name").isJsonNull()) && !jsonObj.get("dns_policy_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dns_policy_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dns_policy_name").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("identity_account_id") != null && !jsonObj.get("identity_account_id").isJsonNull()) && !jsonObj.get("identity_account_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identity_account_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identity_account_id").toString()));
      }
      if ((jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) && !jsonObj.get("mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mode").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("provider_endpoint_id") != null && !jsonObj.get("provider_endpoint_id").isJsonNull()) && !jsonObj.get("provider_endpoint_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provider_endpoint_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provider_endpoint_id").toString()));
      }
      if ((jsonObj.get("provider_type") != null && !jsonObj.get("provider_type").isJsonNull()) && !jsonObj.get("provider_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provider_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provider_type").toString()));
      }
      if (jsonObj.get("provider_virtual_networks") != null && !jsonObj.get("provider_virtual_networks").isJsonNull()) {
        JsonArray jsonArrayproviderVirtualNetworks = jsonObj.getAsJsonArray("provider_virtual_networks");
        if (jsonArrayproviderVirtualNetworks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("provider_virtual_networks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `provider_virtual_networks` to be an array in the JSON string but got `%s`", jsonObj.get("provider_virtual_networks").toString()));
          }

          // validate the optional field `provider_virtual_networks` (array)
          for (int i = 0; i < jsonArrayproviderVirtualNetworks.size(); i++) {
            DdiCloudDnsForwarderPrivateNetwork.validateJsonElement(jsonArrayproviderVirtualNetworks.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DdiCloudDnsForwarderEndpoint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DdiCloudDnsForwarderEndpoint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DdiCloudDnsForwarderEndpoint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DdiCloudDnsForwarderEndpoint.class));

       return (TypeAdapter<T>) new TypeAdapter<DdiCloudDnsForwarderEndpoint>() {
           @Override
           public void write(JsonWriter out, DdiCloudDnsForwarderEndpoint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DdiCloudDnsForwarderEndpoint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DdiCloudDnsForwarderEndpoint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DdiCloudDnsForwarderEndpoint
   * @throws IOException if the JSON string is invalid with respect to DdiCloudDnsForwarderEndpoint
   */
  public static DdiCloudDnsForwarderEndpoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DdiCloudDnsForwarderEndpoint.class);
  }

  /**
   * Convert an instance of DdiCloudDnsForwarderEndpoint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

