/*
 * Cloud DNS Forwarder API
 * Allows configuring resources to forward DNS queries from Cloud Providers to B1DDI/NIOS
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DdiCloudDnsForwarderSubnet;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the private network details from a cloud provider.  For AWS &#x3D;&#x3D; VPC.  For Azure and GCP &#x3D;&#x3D; VNET.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T12:10:24.948083+05:30[Asia/Kolkata]", comments = "Generator version: 7.12.0")
public class DdiCloudDnsForwarderPrivateNetwork {
  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DELETED_AT = "deleted_at";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime deletedAt;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_IDENTITY_ACCOUNT_ID = "identity_account_id";
  @SerializedName(SERIALIZED_NAME_IDENTITY_ACCOUNT_ID)
  @javax.annotation.Nullable
  private String identityAccountId;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  @javax.annotation.Nullable
  private Map<String, Object> metadata = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_PROVIDER_SUBNETS = "provider_subnets";
  @SerializedName(SERIALIZED_NAME_PROVIDER_SUBNETS)
  @javax.annotation.Nullable
  private List<DdiCloudDnsForwarderSubnet> providerSubnets = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROVIDER_VIRTUAL_NETWORK_ID = "provider_virtual_network_id";
  @SerializedName(SERIALIZED_NAME_PROVIDER_VIRTUAL_NETWORK_ID)
  @javax.annotation.Nullable
  private String providerVirtualNetworkId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private Map<String, Object> tags = new HashMap<>();

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime updatedAt;

  public DdiCloudDnsForwarderPrivateNetwork() {
  }

  public DdiCloudDnsForwarderPrivateNetwork(
     String id
  ) {
    this();
    this.id = id;
  }

  public DdiCloudDnsForwarderPrivateNetwork createdAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * The timestamp when the object was created.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DdiCloudDnsForwarderPrivateNetwork deletedAt(@javax.annotation.Nullable OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

  /**
   * The timestamp when the object has been deleted. Nil until deletion.
   * @return deletedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }

  public void setDeletedAt(@javax.annotation.Nullable OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
  }


  /**
   * Primary key.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public DdiCloudDnsForwarderPrivateNetwork identityAccountId(@javax.annotation.Nullable String identityAccountId) {
    this.identityAccountId = identityAccountId;
    return this;
  }

  /**
   * Get identityAccountId
   * @return identityAccountId
   */
  @javax.annotation.Nullable
  public String getIdentityAccountId() {
    return identityAccountId;
  }

  public void setIdentityAccountId(@javax.annotation.Nullable String identityAccountId) {
    this.identityAccountId = identityAccountId;
  }


  public DdiCloudDnsForwarderPrivateNetwork metadata(@javax.annotation.Nullable Map<String, Object> metadata) {
    this.metadata = metadata;
    return this;
  }

  public DdiCloudDnsForwarderPrivateNetwork putMetadataItem(String key, Object metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

  /**
   * Metadata for PrivateNetwork object. Provider specific.
   * @return metadata
   */
  @javax.annotation.Nullable
  public Map<String, Object> getMetadata() {
    return metadata;
  }

  public void setMetadata(@javax.annotation.Nullable Map<String, Object> metadata) {
    this.metadata = metadata;
  }


  public DdiCloudDnsForwarderPrivateNetwork name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * User defined name given to Endpoint.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public DdiCloudDnsForwarderPrivateNetwork providerSubnets(@javax.annotation.Nullable List<DdiCloudDnsForwarderSubnet> providerSubnets) {
    this.providerSubnets = providerSubnets;
    return this;
  }

  public DdiCloudDnsForwarderPrivateNetwork addProviderSubnetsItem(DdiCloudDnsForwarderSubnet providerSubnetsItem) {
    if (this.providerSubnets == null) {
      this.providerSubnets = new ArrayList<>();
    }
    this.providerSubnets.add(providerSubnetsItem);
    return this;
  }

  /**
   * Provider subnets assigned to private network.
   * @return providerSubnets
   */
  @javax.annotation.Nullable
  public List<DdiCloudDnsForwarderSubnet> getProviderSubnets() {
    return providerSubnets;
  }

  public void setProviderSubnets(@javax.annotation.Nullable List<DdiCloudDnsForwarderSubnet> providerSubnets) {
    this.providerSubnets = providerSubnets;
  }


  public DdiCloudDnsForwarderPrivateNetwork providerVirtualNetworkId(@javax.annotation.Nullable String providerVirtualNetworkId) {
    this.providerVirtualNetworkId = providerVirtualNetworkId;
    return this;
  }

  /**
   * The identifier of the cloud object (for AWS:vpc_id, Azure: VNET id, GCP: VPC id).
   * @return providerVirtualNetworkId
   */
  @javax.annotation.Nullable
  public String getProviderVirtualNetworkId() {
    return providerVirtualNetworkId;
  }

  public void setProviderVirtualNetworkId(@javax.annotation.Nullable String providerVirtualNetworkId) {
    this.providerVirtualNetworkId = providerVirtualNetworkId;
  }


  public DdiCloudDnsForwarderPrivateNetwork tags(@javax.annotation.Nullable Map<String, Object> tags) {
    this.tags = tags;
    return this;
  }

  public DdiCloudDnsForwarderPrivateNetwork putTagsItem(String key, Object tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, Object> getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable Map<String, Object> tags) {
    this.tags = tags;
  }


  public DdiCloudDnsForwarderPrivateNetwork updatedAt(@javax.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * The timestamp when the object has been updated. Equals to _created_at_ if not updated after creation.
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(@javax.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DdiCloudDnsForwarderPrivateNetwork ddiCloudDnsForwarderPrivateNetwork = (DdiCloudDnsForwarderPrivateNetwork) o;
    return Objects.equals(this.createdAt, ddiCloudDnsForwarderPrivateNetwork.createdAt) &&
        Objects.equals(this.deletedAt, ddiCloudDnsForwarderPrivateNetwork.deletedAt) &&
        Objects.equals(this.id, ddiCloudDnsForwarderPrivateNetwork.id) &&
        Objects.equals(this.identityAccountId, ddiCloudDnsForwarderPrivateNetwork.identityAccountId) &&
        Objects.equals(this.metadata, ddiCloudDnsForwarderPrivateNetwork.metadata) &&
        Objects.equals(this.name, ddiCloudDnsForwarderPrivateNetwork.name) &&
        Objects.equals(this.providerSubnets, ddiCloudDnsForwarderPrivateNetwork.providerSubnets) &&
        Objects.equals(this.providerVirtualNetworkId, ddiCloudDnsForwarderPrivateNetwork.providerVirtualNetworkId) &&
        Objects.equals(this.tags, ddiCloudDnsForwarderPrivateNetwork.tags) &&
        Objects.equals(this.updatedAt, ddiCloudDnsForwarderPrivateNetwork.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, deletedAt, id, identityAccountId, metadata, name, providerSubnets, providerVirtualNetworkId, tags, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DdiCloudDnsForwarderPrivateNetwork {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identityAccountId: ").append(toIndentedString(identityAccountId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    providerSubnets: ").append(toIndentedString(providerSubnets)).append("\n");
    sb.append("    providerVirtualNetworkId: ").append(toIndentedString(providerVirtualNetworkId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at");
    openapiFields.add("deleted_at");
    openapiFields.add("id");
    openapiFields.add("identity_account_id");
    openapiFields.add("metadata");
    openapiFields.add("name");
    openapiFields.add("provider_subnets");
    openapiFields.add("provider_virtual_network_id");
    openapiFields.add("tags");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DdiCloudDnsForwarderPrivateNetwork
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DdiCloudDnsForwarderPrivateNetwork.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DdiCloudDnsForwarderPrivateNetwork is not found in the empty JSON string", DdiCloudDnsForwarderPrivateNetwork.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DdiCloudDnsForwarderPrivateNetwork.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DdiCloudDnsForwarderPrivateNetwork` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("identity_account_id") != null && !jsonObj.get("identity_account_id").isJsonNull()) && !jsonObj.get("identity_account_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identity_account_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identity_account_id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("provider_subnets") != null && !jsonObj.get("provider_subnets").isJsonNull()) {
        JsonArray jsonArrayproviderSubnets = jsonObj.getAsJsonArray("provider_subnets");
        if (jsonArrayproviderSubnets != null) {
          // ensure the json data is an array
          if (!jsonObj.get("provider_subnets").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `provider_subnets` to be an array in the JSON string but got `%s`", jsonObj.get("provider_subnets").toString()));
          }

          // validate the optional field `provider_subnets` (array)
          for (int i = 0; i < jsonArrayproviderSubnets.size(); i++) {
            DdiCloudDnsForwarderSubnet.validateJsonElement(jsonArrayproviderSubnets.get(i));
          };
        }
      }
      if ((jsonObj.get("provider_virtual_network_id") != null && !jsonObj.get("provider_virtual_network_id").isJsonNull()) && !jsonObj.get("provider_virtual_network_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provider_virtual_network_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provider_virtual_network_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DdiCloudDnsForwarderPrivateNetwork.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DdiCloudDnsForwarderPrivateNetwork' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DdiCloudDnsForwarderPrivateNetwork> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DdiCloudDnsForwarderPrivateNetwork.class));

       return (TypeAdapter<T>) new TypeAdapter<DdiCloudDnsForwarderPrivateNetwork>() {
           @Override
           public void write(JsonWriter out, DdiCloudDnsForwarderPrivateNetwork value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DdiCloudDnsForwarderPrivateNetwork read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DdiCloudDnsForwarderPrivateNetwork given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DdiCloudDnsForwarderPrivateNetwork
   * @throws IOException if the JSON string is invalid with respect to DdiCloudDnsForwarderPrivateNetwork
   */
  public static DdiCloudDnsForwarderPrivateNetwork fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DdiCloudDnsForwarderPrivateNetwork.class);
  }

  /**
   * Convert an instance of DdiCloudDnsForwarderPrivateNetwork to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

