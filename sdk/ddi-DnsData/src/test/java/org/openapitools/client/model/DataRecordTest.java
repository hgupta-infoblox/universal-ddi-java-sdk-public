/*
 * DNS Data API
 * The DNS Data is a BloxOne DDI service providing primary authoritative zone support. DNS Data is authoritative for all DNS resource records and is acting as a primary DNS server. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.   
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DataRecordInheritance;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DataRecord
 */
public class DataRecordTest {
    private final DataRecord model = new DataRecord();

    /**
     * Model tests for DataRecord
     */
    @Test
    public void testDataRecord() {
        // TODO: test DataRecord
    }

    /**
     * Test the property 'absoluteNameSpec'
     */
    @Test
    public void absoluteNameSpecTest() {
        // TODO: test absoluteNameSpec
    }

    /**
     * Test the property 'absoluteZoneName'
     */
    @Test
    public void absoluteZoneNameTest() {
        // TODO: test absoluteZoneName
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'compartmentId'
     */
    @Test
    public void compartmentIdTest() {
        // TODO: test compartmentId
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'delegation'
     */
    @Test
    public void delegationTest() {
        // TODO: test delegation
    }

    /**
     * Test the property 'disabled'
     */
    @Test
    public void disabledTest() {
        // TODO: test disabled
    }

    /**
     * Test the property 'dnsAbsoluteNameSpec'
     */
    @Test
    public void dnsAbsoluteNameSpecTest() {
        // TODO: test dnsAbsoluteNameSpec
    }

    /**
     * Test the property 'dnsAbsoluteZoneName'
     */
    @Test
    public void dnsAbsoluteZoneNameTest() {
        // TODO: test dnsAbsoluteZoneName
    }

    /**
     * Test the property 'dnsNameInZone'
     */
    @Test
    public void dnsNameInZoneTest() {
        // TODO: test dnsNameInZone
    }

    /**
     * Test the property 'dnsRdata'
     */
    @Test
    public void dnsRdataTest() {
        // TODO: test dnsRdata
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'inheritanceSources'
     */
    @Test
    public void inheritanceSourcesTest() {
        // TODO: test inheritanceSources
    }

    /**
     * Test the property 'ipamHost'
     */
    @Test
    public void ipamHostTest() {
        // TODO: test ipamHost
    }

    /**
     * Test the property 'lastQueried'
     */
    @Test
    public void lastQueriedTest() {
        // TODO: test lastQueried
    }

    /**
     * Test the property 'nameInZone'
     */
    @Test
    public void nameInZoneTest() {
        // TODO: test nameInZone
    }

    /**
     * Test the property 'niosMetadata'
     */
    @Test
    public void niosMetadataTest() {
        // TODO: test niosMetadata
    }

    /**
     * Test the property 'options'
     */
    @Test
    public void optionsTest() {
        // TODO: test options
    }

    /**
     * Test the property 'providerMetadata'
     */
    @Test
    public void providerMetadataTest() {
        // TODO: test providerMetadata
    }

    /**
     * Test the property 'rdata'
     */
    @Test
    public void rdataTest() {
        // TODO: test rdata
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'subtype'
     */
    @Test
    public void subtypeTest() {
        // TODO: test subtype
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'ttl'
     */
    @Test
    public void ttlTest() {
        // TODO: test ttl
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'view'
     */
    @Test
    public void viewTest() {
        // TODO: test view
    }

    /**
     * Test the property 'viewName'
     */
    @Test
    public void viewNameTest() {
        // TODO: test viewName
    }

    /**
     * Test the property 'zone'
     */
    @Test
    public void zoneTest() {
        // TODO: test zone
    }

}
