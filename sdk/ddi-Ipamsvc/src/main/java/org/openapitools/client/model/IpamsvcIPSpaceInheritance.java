/*
 * IP Address Management API
 * The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.InheritanceInheritedBool;
import org.openapitools.client.model.InheritanceInheritedFloat;
import org.openapitools.client.model.InheritanceInheritedIdentifier;
import org.openapitools.client.model.InheritanceInheritedString;
import org.openapitools.client.model.IpamsvcInheritedASMConfig;
import org.openapitools.client.model.IpamsvcInheritedDDNSHostnameBlock;
import org.openapitools.client.model.IpamsvcInheritedDDNSUpdateBlock;
import org.openapitools.client.model.IpamsvcInheritedDHCPConfig;
import org.openapitools.client.model.IpamsvcInheritedDHCPOptionList;
import org.openapitools.client.model.IpamsvcInheritedHostnameRewriteBlock;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The __IPSpaceInheritance__ object specifies how and which fields _IPSpace_ object inherits from the parent.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T12:10:31.429972+05:30[Asia/Kolkata]", comments = "Generator version: 7.12.0")
public class IpamsvcIPSpaceInheritance {
  public static final String SERIALIZED_NAME_ASM_CONFIG = "asm_config";
  @SerializedName(SERIALIZED_NAME_ASM_CONFIG)
  @javax.annotation.Nullable
  private IpamsvcInheritedASMConfig asmConfig;

  public static final String SERIALIZED_NAME_DDNS_CLIENT_UPDATE = "ddns_client_update";
  @SerializedName(SERIALIZED_NAME_DDNS_CLIENT_UPDATE)
  @javax.annotation.Nullable
  private InheritanceInheritedString ddnsClientUpdate;

  public static final String SERIALIZED_NAME_DDNS_CONFLICT_RESOLUTION_MODE = "ddns_conflict_resolution_mode";
  @SerializedName(SERIALIZED_NAME_DDNS_CONFLICT_RESOLUTION_MODE)
  @javax.annotation.Nullable
  private InheritanceInheritedString ddnsConflictResolutionMode;

  public static final String SERIALIZED_NAME_DDNS_ENABLED = "ddns_enabled";
  @SerializedName(SERIALIZED_NAME_DDNS_ENABLED)
  @javax.annotation.Nullable
  private InheritanceInheritedBool ddnsEnabled;

  public static final String SERIALIZED_NAME_DDNS_HOSTNAME_BLOCK = "ddns_hostname_block";
  @SerializedName(SERIALIZED_NAME_DDNS_HOSTNAME_BLOCK)
  @javax.annotation.Nullable
  private IpamsvcInheritedDDNSHostnameBlock ddnsHostnameBlock;

  public static final String SERIALIZED_NAME_DDNS_TTL_PERCENT = "ddns_ttl_percent";
  @SerializedName(SERIALIZED_NAME_DDNS_TTL_PERCENT)
  @javax.annotation.Nullable
  private InheritanceInheritedFloat ddnsTtlPercent;

  public static final String SERIALIZED_NAME_DDNS_UPDATE_BLOCK = "ddns_update_block";
  @SerializedName(SERIALIZED_NAME_DDNS_UPDATE_BLOCK)
  @javax.annotation.Nullable
  private IpamsvcInheritedDDNSUpdateBlock ddnsUpdateBlock;

  public static final String SERIALIZED_NAME_DDNS_UPDATE_ON_RENEW = "ddns_update_on_renew";
  @SerializedName(SERIALIZED_NAME_DDNS_UPDATE_ON_RENEW)
  @javax.annotation.Nullable
  private InheritanceInheritedBool ddnsUpdateOnRenew;

  public static final String SERIALIZED_NAME_DDNS_USE_CONFLICT_RESOLUTION = "ddns_use_conflict_resolution";
  @SerializedName(SERIALIZED_NAME_DDNS_USE_CONFLICT_RESOLUTION)
  @javax.annotation.Nullable
  private InheritanceInheritedBool ddnsUseConflictResolution;

  public static final String SERIALIZED_NAME_DHCP_CONFIG = "dhcp_config";
  @SerializedName(SERIALIZED_NAME_DHCP_CONFIG)
  @javax.annotation.Nullable
  private IpamsvcInheritedDHCPConfig dhcpConfig;

  public static final String SERIALIZED_NAME_DHCP_OPTIONS = "dhcp_options";
  @SerializedName(SERIALIZED_NAME_DHCP_OPTIONS)
  @javax.annotation.Nullable
  private IpamsvcInheritedDHCPOptionList dhcpOptions;

  public static final String SERIALIZED_NAME_DHCP_OPTIONS_V6 = "dhcp_options_v6";
  @SerializedName(SERIALIZED_NAME_DHCP_OPTIONS_V6)
  @javax.annotation.Nullable
  private IpamsvcInheritedDHCPOptionList dhcpOptionsV6;

  public static final String SERIALIZED_NAME_HEADER_OPTION_FILENAME = "header_option_filename";
  @SerializedName(SERIALIZED_NAME_HEADER_OPTION_FILENAME)
  @javax.annotation.Nullable
  private InheritanceInheritedString headerOptionFilename;

  public static final String SERIALIZED_NAME_HEADER_OPTION_SERVER_ADDRESS = "header_option_server_address";
  @SerializedName(SERIALIZED_NAME_HEADER_OPTION_SERVER_ADDRESS)
  @javax.annotation.Nullable
  private InheritanceInheritedString headerOptionServerAddress;

  public static final String SERIALIZED_NAME_HEADER_OPTION_SERVER_NAME = "header_option_server_name";
  @SerializedName(SERIALIZED_NAME_HEADER_OPTION_SERVER_NAME)
  @javax.annotation.Nullable
  private InheritanceInheritedString headerOptionServerName;

  public static final String SERIALIZED_NAME_HOSTNAME_REWRITE_BLOCK = "hostname_rewrite_block";
  @SerializedName(SERIALIZED_NAME_HOSTNAME_REWRITE_BLOCK)
  @javax.annotation.Nullable
  private IpamsvcInheritedHostnameRewriteBlock hostnameRewriteBlock;

  public static final String SERIALIZED_NAME_VENDOR_SPECIFIC_OPTION_OPTION_SPACE = "vendor_specific_option_option_space";
  @SerializedName(SERIALIZED_NAME_VENDOR_SPECIFIC_OPTION_OPTION_SPACE)
  @javax.annotation.Nullable
  private InheritanceInheritedIdentifier vendorSpecificOptionOptionSpace;

  public IpamsvcIPSpaceInheritance() {
  }

  public IpamsvcIPSpaceInheritance asmConfig(@javax.annotation.Nullable IpamsvcInheritedASMConfig asmConfig) {
    this.asmConfig = asmConfig;
    return this;
  }

  /**
   * Get asmConfig
   * @return asmConfig
   */
  @javax.annotation.Nullable
  public IpamsvcInheritedASMConfig getAsmConfig() {
    return asmConfig;
  }

  public void setAsmConfig(@javax.annotation.Nullable IpamsvcInheritedASMConfig asmConfig) {
    this.asmConfig = asmConfig;
  }


  public IpamsvcIPSpaceInheritance ddnsClientUpdate(@javax.annotation.Nullable InheritanceInheritedString ddnsClientUpdate) {
    this.ddnsClientUpdate = ddnsClientUpdate;
    return this;
  }

  /**
   * Get ddnsClientUpdate
   * @return ddnsClientUpdate
   */
  @javax.annotation.Nullable
  public InheritanceInheritedString getDdnsClientUpdate() {
    return ddnsClientUpdate;
  }

  public void setDdnsClientUpdate(@javax.annotation.Nullable InheritanceInheritedString ddnsClientUpdate) {
    this.ddnsClientUpdate = ddnsClientUpdate;
  }


  public IpamsvcIPSpaceInheritance ddnsConflictResolutionMode(@javax.annotation.Nullable InheritanceInheritedString ddnsConflictResolutionMode) {
    this.ddnsConflictResolutionMode = ddnsConflictResolutionMode;
    return this;
  }

  /**
   * Get ddnsConflictResolutionMode
   * @return ddnsConflictResolutionMode
   */
  @javax.annotation.Nullable
  public InheritanceInheritedString getDdnsConflictResolutionMode() {
    return ddnsConflictResolutionMode;
  }

  public void setDdnsConflictResolutionMode(@javax.annotation.Nullable InheritanceInheritedString ddnsConflictResolutionMode) {
    this.ddnsConflictResolutionMode = ddnsConflictResolutionMode;
  }


  public IpamsvcIPSpaceInheritance ddnsEnabled(@javax.annotation.Nullable InheritanceInheritedBool ddnsEnabled) {
    this.ddnsEnabled = ddnsEnabled;
    return this;
  }

  /**
   * Get ddnsEnabled
   * @return ddnsEnabled
   */
  @javax.annotation.Nullable
  public InheritanceInheritedBool getDdnsEnabled() {
    return ddnsEnabled;
  }

  public void setDdnsEnabled(@javax.annotation.Nullable InheritanceInheritedBool ddnsEnabled) {
    this.ddnsEnabled = ddnsEnabled;
  }


  public IpamsvcIPSpaceInheritance ddnsHostnameBlock(@javax.annotation.Nullable IpamsvcInheritedDDNSHostnameBlock ddnsHostnameBlock) {
    this.ddnsHostnameBlock = ddnsHostnameBlock;
    return this;
  }

  /**
   * Get ddnsHostnameBlock
   * @return ddnsHostnameBlock
   */
  @javax.annotation.Nullable
  public IpamsvcInheritedDDNSHostnameBlock getDdnsHostnameBlock() {
    return ddnsHostnameBlock;
  }

  public void setDdnsHostnameBlock(@javax.annotation.Nullable IpamsvcInheritedDDNSHostnameBlock ddnsHostnameBlock) {
    this.ddnsHostnameBlock = ddnsHostnameBlock;
  }


  public IpamsvcIPSpaceInheritance ddnsTtlPercent(@javax.annotation.Nullable InheritanceInheritedFloat ddnsTtlPercent) {
    this.ddnsTtlPercent = ddnsTtlPercent;
    return this;
  }

  /**
   * Get ddnsTtlPercent
   * @return ddnsTtlPercent
   */
  @javax.annotation.Nullable
  public InheritanceInheritedFloat getDdnsTtlPercent() {
    return ddnsTtlPercent;
  }

  public void setDdnsTtlPercent(@javax.annotation.Nullable InheritanceInheritedFloat ddnsTtlPercent) {
    this.ddnsTtlPercent = ddnsTtlPercent;
  }


  public IpamsvcIPSpaceInheritance ddnsUpdateBlock(@javax.annotation.Nullable IpamsvcInheritedDDNSUpdateBlock ddnsUpdateBlock) {
    this.ddnsUpdateBlock = ddnsUpdateBlock;
    return this;
  }

  /**
   * Get ddnsUpdateBlock
   * @return ddnsUpdateBlock
   */
  @javax.annotation.Nullable
  public IpamsvcInheritedDDNSUpdateBlock getDdnsUpdateBlock() {
    return ddnsUpdateBlock;
  }

  public void setDdnsUpdateBlock(@javax.annotation.Nullable IpamsvcInheritedDDNSUpdateBlock ddnsUpdateBlock) {
    this.ddnsUpdateBlock = ddnsUpdateBlock;
  }


  public IpamsvcIPSpaceInheritance ddnsUpdateOnRenew(@javax.annotation.Nullable InheritanceInheritedBool ddnsUpdateOnRenew) {
    this.ddnsUpdateOnRenew = ddnsUpdateOnRenew;
    return this;
  }

  /**
   * Get ddnsUpdateOnRenew
   * @return ddnsUpdateOnRenew
   */
  @javax.annotation.Nullable
  public InheritanceInheritedBool getDdnsUpdateOnRenew() {
    return ddnsUpdateOnRenew;
  }

  public void setDdnsUpdateOnRenew(@javax.annotation.Nullable InheritanceInheritedBool ddnsUpdateOnRenew) {
    this.ddnsUpdateOnRenew = ddnsUpdateOnRenew;
  }


  public IpamsvcIPSpaceInheritance ddnsUseConflictResolution(@javax.annotation.Nullable InheritanceInheritedBool ddnsUseConflictResolution) {
    this.ddnsUseConflictResolution = ddnsUseConflictResolution;
    return this;
  }

  /**
   * Get ddnsUseConflictResolution
   * @return ddnsUseConflictResolution
   */
  @javax.annotation.Nullable
  public InheritanceInheritedBool getDdnsUseConflictResolution() {
    return ddnsUseConflictResolution;
  }

  public void setDdnsUseConflictResolution(@javax.annotation.Nullable InheritanceInheritedBool ddnsUseConflictResolution) {
    this.ddnsUseConflictResolution = ddnsUseConflictResolution;
  }


  public IpamsvcIPSpaceInheritance dhcpConfig(@javax.annotation.Nullable IpamsvcInheritedDHCPConfig dhcpConfig) {
    this.dhcpConfig = dhcpConfig;
    return this;
  }

  /**
   * Get dhcpConfig
   * @return dhcpConfig
   */
  @javax.annotation.Nullable
  public IpamsvcInheritedDHCPConfig getDhcpConfig() {
    return dhcpConfig;
  }

  public void setDhcpConfig(@javax.annotation.Nullable IpamsvcInheritedDHCPConfig dhcpConfig) {
    this.dhcpConfig = dhcpConfig;
  }


  public IpamsvcIPSpaceInheritance dhcpOptions(@javax.annotation.Nullable IpamsvcInheritedDHCPOptionList dhcpOptions) {
    this.dhcpOptions = dhcpOptions;
    return this;
  }

  /**
   * Get dhcpOptions
   * @return dhcpOptions
   */
  @javax.annotation.Nullable
  public IpamsvcInheritedDHCPOptionList getDhcpOptions() {
    return dhcpOptions;
  }

  public void setDhcpOptions(@javax.annotation.Nullable IpamsvcInheritedDHCPOptionList dhcpOptions) {
    this.dhcpOptions = dhcpOptions;
  }


  public IpamsvcIPSpaceInheritance dhcpOptionsV6(@javax.annotation.Nullable IpamsvcInheritedDHCPOptionList dhcpOptionsV6) {
    this.dhcpOptionsV6 = dhcpOptionsV6;
    return this;
  }

  /**
   * Get dhcpOptionsV6
   * @return dhcpOptionsV6
   */
  @javax.annotation.Nullable
  public IpamsvcInheritedDHCPOptionList getDhcpOptionsV6() {
    return dhcpOptionsV6;
  }

  public void setDhcpOptionsV6(@javax.annotation.Nullable IpamsvcInheritedDHCPOptionList dhcpOptionsV6) {
    this.dhcpOptionsV6 = dhcpOptionsV6;
  }


  public IpamsvcIPSpaceInheritance headerOptionFilename(@javax.annotation.Nullable InheritanceInheritedString headerOptionFilename) {
    this.headerOptionFilename = headerOptionFilename;
    return this;
  }

  /**
   * Get headerOptionFilename
   * @return headerOptionFilename
   */
  @javax.annotation.Nullable
  public InheritanceInheritedString getHeaderOptionFilename() {
    return headerOptionFilename;
  }

  public void setHeaderOptionFilename(@javax.annotation.Nullable InheritanceInheritedString headerOptionFilename) {
    this.headerOptionFilename = headerOptionFilename;
  }


  public IpamsvcIPSpaceInheritance headerOptionServerAddress(@javax.annotation.Nullable InheritanceInheritedString headerOptionServerAddress) {
    this.headerOptionServerAddress = headerOptionServerAddress;
    return this;
  }

  /**
   * Get headerOptionServerAddress
   * @return headerOptionServerAddress
   */
  @javax.annotation.Nullable
  public InheritanceInheritedString getHeaderOptionServerAddress() {
    return headerOptionServerAddress;
  }

  public void setHeaderOptionServerAddress(@javax.annotation.Nullable InheritanceInheritedString headerOptionServerAddress) {
    this.headerOptionServerAddress = headerOptionServerAddress;
  }


  public IpamsvcIPSpaceInheritance headerOptionServerName(@javax.annotation.Nullable InheritanceInheritedString headerOptionServerName) {
    this.headerOptionServerName = headerOptionServerName;
    return this;
  }

  /**
   * Get headerOptionServerName
   * @return headerOptionServerName
   */
  @javax.annotation.Nullable
  public InheritanceInheritedString getHeaderOptionServerName() {
    return headerOptionServerName;
  }

  public void setHeaderOptionServerName(@javax.annotation.Nullable InheritanceInheritedString headerOptionServerName) {
    this.headerOptionServerName = headerOptionServerName;
  }


  public IpamsvcIPSpaceInheritance hostnameRewriteBlock(@javax.annotation.Nullable IpamsvcInheritedHostnameRewriteBlock hostnameRewriteBlock) {
    this.hostnameRewriteBlock = hostnameRewriteBlock;
    return this;
  }

  /**
   * Get hostnameRewriteBlock
   * @return hostnameRewriteBlock
   */
  @javax.annotation.Nullable
  public IpamsvcInheritedHostnameRewriteBlock getHostnameRewriteBlock() {
    return hostnameRewriteBlock;
  }

  public void setHostnameRewriteBlock(@javax.annotation.Nullable IpamsvcInheritedHostnameRewriteBlock hostnameRewriteBlock) {
    this.hostnameRewriteBlock = hostnameRewriteBlock;
  }


  public IpamsvcIPSpaceInheritance vendorSpecificOptionOptionSpace(@javax.annotation.Nullable InheritanceInheritedIdentifier vendorSpecificOptionOptionSpace) {
    this.vendorSpecificOptionOptionSpace = vendorSpecificOptionOptionSpace;
    return this;
  }

  /**
   * Get vendorSpecificOptionOptionSpace
   * @return vendorSpecificOptionOptionSpace
   */
  @javax.annotation.Nullable
  public InheritanceInheritedIdentifier getVendorSpecificOptionOptionSpace() {
    return vendorSpecificOptionOptionSpace;
  }

  public void setVendorSpecificOptionOptionSpace(@javax.annotation.Nullable InheritanceInheritedIdentifier vendorSpecificOptionOptionSpace) {
    this.vendorSpecificOptionOptionSpace = vendorSpecificOptionOptionSpace;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IpamsvcIPSpaceInheritance ipamsvcIPSpaceInheritance = (IpamsvcIPSpaceInheritance) o;
    return Objects.equals(this.asmConfig, ipamsvcIPSpaceInheritance.asmConfig) &&
        Objects.equals(this.ddnsClientUpdate, ipamsvcIPSpaceInheritance.ddnsClientUpdate) &&
        Objects.equals(this.ddnsConflictResolutionMode, ipamsvcIPSpaceInheritance.ddnsConflictResolutionMode) &&
        Objects.equals(this.ddnsEnabled, ipamsvcIPSpaceInheritance.ddnsEnabled) &&
        Objects.equals(this.ddnsHostnameBlock, ipamsvcIPSpaceInheritance.ddnsHostnameBlock) &&
        Objects.equals(this.ddnsTtlPercent, ipamsvcIPSpaceInheritance.ddnsTtlPercent) &&
        Objects.equals(this.ddnsUpdateBlock, ipamsvcIPSpaceInheritance.ddnsUpdateBlock) &&
        Objects.equals(this.ddnsUpdateOnRenew, ipamsvcIPSpaceInheritance.ddnsUpdateOnRenew) &&
        Objects.equals(this.ddnsUseConflictResolution, ipamsvcIPSpaceInheritance.ddnsUseConflictResolution) &&
        Objects.equals(this.dhcpConfig, ipamsvcIPSpaceInheritance.dhcpConfig) &&
        Objects.equals(this.dhcpOptions, ipamsvcIPSpaceInheritance.dhcpOptions) &&
        Objects.equals(this.dhcpOptionsV6, ipamsvcIPSpaceInheritance.dhcpOptionsV6) &&
        Objects.equals(this.headerOptionFilename, ipamsvcIPSpaceInheritance.headerOptionFilename) &&
        Objects.equals(this.headerOptionServerAddress, ipamsvcIPSpaceInheritance.headerOptionServerAddress) &&
        Objects.equals(this.headerOptionServerName, ipamsvcIPSpaceInheritance.headerOptionServerName) &&
        Objects.equals(this.hostnameRewriteBlock, ipamsvcIPSpaceInheritance.hostnameRewriteBlock) &&
        Objects.equals(this.vendorSpecificOptionOptionSpace, ipamsvcIPSpaceInheritance.vendorSpecificOptionOptionSpace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asmConfig, ddnsClientUpdate, ddnsConflictResolutionMode, ddnsEnabled, ddnsHostnameBlock, ddnsTtlPercent, ddnsUpdateBlock, ddnsUpdateOnRenew, ddnsUseConflictResolution, dhcpConfig, dhcpOptions, dhcpOptionsV6, headerOptionFilename, headerOptionServerAddress, headerOptionServerName, hostnameRewriteBlock, vendorSpecificOptionOptionSpace);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IpamsvcIPSpaceInheritance {\n");
    sb.append("    asmConfig: ").append(toIndentedString(asmConfig)).append("\n");
    sb.append("    ddnsClientUpdate: ").append(toIndentedString(ddnsClientUpdate)).append("\n");
    sb.append("    ddnsConflictResolutionMode: ").append(toIndentedString(ddnsConflictResolutionMode)).append("\n");
    sb.append("    ddnsEnabled: ").append(toIndentedString(ddnsEnabled)).append("\n");
    sb.append("    ddnsHostnameBlock: ").append(toIndentedString(ddnsHostnameBlock)).append("\n");
    sb.append("    ddnsTtlPercent: ").append(toIndentedString(ddnsTtlPercent)).append("\n");
    sb.append("    ddnsUpdateBlock: ").append(toIndentedString(ddnsUpdateBlock)).append("\n");
    sb.append("    ddnsUpdateOnRenew: ").append(toIndentedString(ddnsUpdateOnRenew)).append("\n");
    sb.append("    ddnsUseConflictResolution: ").append(toIndentedString(ddnsUseConflictResolution)).append("\n");
    sb.append("    dhcpConfig: ").append(toIndentedString(dhcpConfig)).append("\n");
    sb.append("    dhcpOptions: ").append(toIndentedString(dhcpOptions)).append("\n");
    sb.append("    dhcpOptionsV6: ").append(toIndentedString(dhcpOptionsV6)).append("\n");
    sb.append("    headerOptionFilename: ").append(toIndentedString(headerOptionFilename)).append("\n");
    sb.append("    headerOptionServerAddress: ").append(toIndentedString(headerOptionServerAddress)).append("\n");
    sb.append("    headerOptionServerName: ").append(toIndentedString(headerOptionServerName)).append("\n");
    sb.append("    hostnameRewriteBlock: ").append(toIndentedString(hostnameRewriteBlock)).append("\n");
    sb.append("    vendorSpecificOptionOptionSpace: ").append(toIndentedString(vendorSpecificOptionOptionSpace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("asm_config");
    openapiFields.add("ddns_client_update");
    openapiFields.add("ddns_conflict_resolution_mode");
    openapiFields.add("ddns_enabled");
    openapiFields.add("ddns_hostname_block");
    openapiFields.add("ddns_ttl_percent");
    openapiFields.add("ddns_update_block");
    openapiFields.add("ddns_update_on_renew");
    openapiFields.add("ddns_use_conflict_resolution");
    openapiFields.add("dhcp_config");
    openapiFields.add("dhcp_options");
    openapiFields.add("dhcp_options_v6");
    openapiFields.add("header_option_filename");
    openapiFields.add("header_option_server_address");
    openapiFields.add("header_option_server_name");
    openapiFields.add("hostname_rewrite_block");
    openapiFields.add("vendor_specific_option_option_space");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IpamsvcIPSpaceInheritance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IpamsvcIPSpaceInheritance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IpamsvcIPSpaceInheritance is not found in the empty JSON string", IpamsvcIPSpaceInheritance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IpamsvcIPSpaceInheritance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IpamsvcIPSpaceInheritance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `asm_config`
      if (jsonObj.get("asm_config") != null && !jsonObj.get("asm_config").isJsonNull()) {
        IpamsvcInheritedASMConfig.validateJsonElement(jsonObj.get("asm_config"));
      }
      // validate the optional field `ddns_client_update`
      if (jsonObj.get("ddns_client_update") != null && !jsonObj.get("ddns_client_update").isJsonNull()) {
        InheritanceInheritedString.validateJsonElement(jsonObj.get("ddns_client_update"));
      }
      // validate the optional field `ddns_conflict_resolution_mode`
      if (jsonObj.get("ddns_conflict_resolution_mode") != null && !jsonObj.get("ddns_conflict_resolution_mode").isJsonNull()) {
        InheritanceInheritedString.validateJsonElement(jsonObj.get("ddns_conflict_resolution_mode"));
      }
      // validate the optional field `ddns_enabled`
      if (jsonObj.get("ddns_enabled") != null && !jsonObj.get("ddns_enabled").isJsonNull()) {
        InheritanceInheritedBool.validateJsonElement(jsonObj.get("ddns_enabled"));
      }
      // validate the optional field `ddns_hostname_block`
      if (jsonObj.get("ddns_hostname_block") != null && !jsonObj.get("ddns_hostname_block").isJsonNull()) {
        IpamsvcInheritedDDNSHostnameBlock.validateJsonElement(jsonObj.get("ddns_hostname_block"));
      }
      // validate the optional field `ddns_ttl_percent`
      if (jsonObj.get("ddns_ttl_percent") != null && !jsonObj.get("ddns_ttl_percent").isJsonNull()) {
        InheritanceInheritedFloat.validateJsonElement(jsonObj.get("ddns_ttl_percent"));
      }
      // validate the optional field `ddns_update_block`
      if (jsonObj.get("ddns_update_block") != null && !jsonObj.get("ddns_update_block").isJsonNull()) {
        IpamsvcInheritedDDNSUpdateBlock.validateJsonElement(jsonObj.get("ddns_update_block"));
      }
      // validate the optional field `ddns_update_on_renew`
      if (jsonObj.get("ddns_update_on_renew") != null && !jsonObj.get("ddns_update_on_renew").isJsonNull()) {
        InheritanceInheritedBool.validateJsonElement(jsonObj.get("ddns_update_on_renew"));
      }
      // validate the optional field `ddns_use_conflict_resolution`
      if (jsonObj.get("ddns_use_conflict_resolution") != null && !jsonObj.get("ddns_use_conflict_resolution").isJsonNull()) {
        InheritanceInheritedBool.validateJsonElement(jsonObj.get("ddns_use_conflict_resolution"));
      }
      // validate the optional field `dhcp_config`
      if (jsonObj.get("dhcp_config") != null && !jsonObj.get("dhcp_config").isJsonNull()) {
        IpamsvcInheritedDHCPConfig.validateJsonElement(jsonObj.get("dhcp_config"));
      }
      // validate the optional field `dhcp_options`
      if (jsonObj.get("dhcp_options") != null && !jsonObj.get("dhcp_options").isJsonNull()) {
        IpamsvcInheritedDHCPOptionList.validateJsonElement(jsonObj.get("dhcp_options"));
      }
      // validate the optional field `dhcp_options_v6`
      if (jsonObj.get("dhcp_options_v6") != null && !jsonObj.get("dhcp_options_v6").isJsonNull()) {
        IpamsvcInheritedDHCPOptionList.validateJsonElement(jsonObj.get("dhcp_options_v6"));
      }
      // validate the optional field `header_option_filename`
      if (jsonObj.get("header_option_filename") != null && !jsonObj.get("header_option_filename").isJsonNull()) {
        InheritanceInheritedString.validateJsonElement(jsonObj.get("header_option_filename"));
      }
      // validate the optional field `header_option_server_address`
      if (jsonObj.get("header_option_server_address") != null && !jsonObj.get("header_option_server_address").isJsonNull()) {
        InheritanceInheritedString.validateJsonElement(jsonObj.get("header_option_server_address"));
      }
      // validate the optional field `header_option_server_name`
      if (jsonObj.get("header_option_server_name") != null && !jsonObj.get("header_option_server_name").isJsonNull()) {
        InheritanceInheritedString.validateJsonElement(jsonObj.get("header_option_server_name"));
      }
      // validate the optional field `hostname_rewrite_block`
      if (jsonObj.get("hostname_rewrite_block") != null && !jsonObj.get("hostname_rewrite_block").isJsonNull()) {
        IpamsvcInheritedHostnameRewriteBlock.validateJsonElement(jsonObj.get("hostname_rewrite_block"));
      }
      // validate the optional field `vendor_specific_option_option_space`
      if (jsonObj.get("vendor_specific_option_option_space") != null && !jsonObj.get("vendor_specific_option_option_space").isJsonNull()) {
        InheritanceInheritedIdentifier.validateJsonElement(jsonObj.get("vendor_specific_option_option_space"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IpamsvcIPSpaceInheritance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IpamsvcIPSpaceInheritance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IpamsvcIPSpaceInheritance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IpamsvcIPSpaceInheritance.class));

       return (TypeAdapter<T>) new TypeAdapter<IpamsvcIPSpaceInheritance>() {
           @Override
           public void write(JsonWriter out, IpamsvcIPSpaceInheritance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IpamsvcIPSpaceInheritance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IpamsvcIPSpaceInheritance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IpamsvcIPSpaceInheritance
   * @throws IOException if the JSON string is invalid with respect to IpamsvcIPSpaceInheritance
   */
  public static IpamsvcIPSpaceInheritance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IpamsvcIPSpaceInheritance.class);
  }

  /**
   * Convert an instance of IpamsvcIPSpaceInheritance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

