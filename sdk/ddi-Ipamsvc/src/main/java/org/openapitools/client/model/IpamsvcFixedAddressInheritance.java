/*
 * IP Address Management API
 * The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.InheritanceInheritedString;
import org.openapitools.client.model.IpamsvcInheritedDHCPOptionList;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The __FixedAddressInheritance__ object specifies how and which fields _FixedAddress_ object inherits from the parent.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T12:10:31.429972+05:30[Asia/Kolkata]", comments = "Generator version: 7.12.0")
public class IpamsvcFixedAddressInheritance {
  public static final String SERIALIZED_NAME_DHCP_OPTIONS = "dhcp_options";
  @SerializedName(SERIALIZED_NAME_DHCP_OPTIONS)
  @javax.annotation.Nullable
  private IpamsvcInheritedDHCPOptionList dhcpOptions;

  public static final String SERIALIZED_NAME_HEADER_OPTION_FILENAME = "header_option_filename";
  @SerializedName(SERIALIZED_NAME_HEADER_OPTION_FILENAME)
  @javax.annotation.Nullable
  private InheritanceInheritedString headerOptionFilename;

  public static final String SERIALIZED_NAME_HEADER_OPTION_SERVER_ADDRESS = "header_option_server_address";
  @SerializedName(SERIALIZED_NAME_HEADER_OPTION_SERVER_ADDRESS)
  @javax.annotation.Nullable
  private InheritanceInheritedString headerOptionServerAddress;

  public static final String SERIALIZED_NAME_HEADER_OPTION_SERVER_NAME = "header_option_server_name";
  @SerializedName(SERIALIZED_NAME_HEADER_OPTION_SERVER_NAME)
  @javax.annotation.Nullable
  private InheritanceInheritedString headerOptionServerName;

  public IpamsvcFixedAddressInheritance() {
  }

  public IpamsvcFixedAddressInheritance dhcpOptions(@javax.annotation.Nullable IpamsvcInheritedDHCPOptionList dhcpOptions) {
    this.dhcpOptions = dhcpOptions;
    return this;
  }

  /**
   * Get dhcpOptions
   * @return dhcpOptions
   */
  @javax.annotation.Nullable
  public IpamsvcInheritedDHCPOptionList getDhcpOptions() {
    return dhcpOptions;
  }

  public void setDhcpOptions(@javax.annotation.Nullable IpamsvcInheritedDHCPOptionList dhcpOptions) {
    this.dhcpOptions = dhcpOptions;
  }


  public IpamsvcFixedAddressInheritance headerOptionFilename(@javax.annotation.Nullable InheritanceInheritedString headerOptionFilename) {
    this.headerOptionFilename = headerOptionFilename;
    return this;
  }

  /**
   * Get headerOptionFilename
   * @return headerOptionFilename
   */
  @javax.annotation.Nullable
  public InheritanceInheritedString getHeaderOptionFilename() {
    return headerOptionFilename;
  }

  public void setHeaderOptionFilename(@javax.annotation.Nullable InheritanceInheritedString headerOptionFilename) {
    this.headerOptionFilename = headerOptionFilename;
  }


  public IpamsvcFixedAddressInheritance headerOptionServerAddress(@javax.annotation.Nullable InheritanceInheritedString headerOptionServerAddress) {
    this.headerOptionServerAddress = headerOptionServerAddress;
    return this;
  }

  /**
   * Get headerOptionServerAddress
   * @return headerOptionServerAddress
   */
  @javax.annotation.Nullable
  public InheritanceInheritedString getHeaderOptionServerAddress() {
    return headerOptionServerAddress;
  }

  public void setHeaderOptionServerAddress(@javax.annotation.Nullable InheritanceInheritedString headerOptionServerAddress) {
    this.headerOptionServerAddress = headerOptionServerAddress;
  }


  public IpamsvcFixedAddressInheritance headerOptionServerName(@javax.annotation.Nullable InheritanceInheritedString headerOptionServerName) {
    this.headerOptionServerName = headerOptionServerName;
    return this;
  }

  /**
   * Get headerOptionServerName
   * @return headerOptionServerName
   */
  @javax.annotation.Nullable
  public InheritanceInheritedString getHeaderOptionServerName() {
    return headerOptionServerName;
  }

  public void setHeaderOptionServerName(@javax.annotation.Nullable InheritanceInheritedString headerOptionServerName) {
    this.headerOptionServerName = headerOptionServerName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IpamsvcFixedAddressInheritance ipamsvcFixedAddressInheritance = (IpamsvcFixedAddressInheritance) o;
    return Objects.equals(this.dhcpOptions, ipamsvcFixedAddressInheritance.dhcpOptions) &&
        Objects.equals(this.headerOptionFilename, ipamsvcFixedAddressInheritance.headerOptionFilename) &&
        Objects.equals(this.headerOptionServerAddress, ipamsvcFixedAddressInheritance.headerOptionServerAddress) &&
        Objects.equals(this.headerOptionServerName, ipamsvcFixedAddressInheritance.headerOptionServerName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dhcpOptions, headerOptionFilename, headerOptionServerAddress, headerOptionServerName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IpamsvcFixedAddressInheritance {\n");
    sb.append("    dhcpOptions: ").append(toIndentedString(dhcpOptions)).append("\n");
    sb.append("    headerOptionFilename: ").append(toIndentedString(headerOptionFilename)).append("\n");
    sb.append("    headerOptionServerAddress: ").append(toIndentedString(headerOptionServerAddress)).append("\n");
    sb.append("    headerOptionServerName: ").append(toIndentedString(headerOptionServerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dhcp_options");
    openapiFields.add("header_option_filename");
    openapiFields.add("header_option_server_address");
    openapiFields.add("header_option_server_name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IpamsvcFixedAddressInheritance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IpamsvcFixedAddressInheritance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IpamsvcFixedAddressInheritance is not found in the empty JSON string", IpamsvcFixedAddressInheritance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IpamsvcFixedAddressInheritance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IpamsvcFixedAddressInheritance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dhcp_options`
      if (jsonObj.get("dhcp_options") != null && !jsonObj.get("dhcp_options").isJsonNull()) {
        IpamsvcInheritedDHCPOptionList.validateJsonElement(jsonObj.get("dhcp_options"));
      }
      // validate the optional field `header_option_filename`
      if (jsonObj.get("header_option_filename") != null && !jsonObj.get("header_option_filename").isJsonNull()) {
        InheritanceInheritedString.validateJsonElement(jsonObj.get("header_option_filename"));
      }
      // validate the optional field `header_option_server_address`
      if (jsonObj.get("header_option_server_address") != null && !jsonObj.get("header_option_server_address").isJsonNull()) {
        InheritanceInheritedString.validateJsonElement(jsonObj.get("header_option_server_address"));
      }
      // validate the optional field `header_option_server_name`
      if (jsonObj.get("header_option_server_name") != null && !jsonObj.get("header_option_server_name").isJsonNull()) {
        InheritanceInheritedString.validateJsonElement(jsonObj.get("header_option_server_name"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IpamsvcFixedAddressInheritance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IpamsvcFixedAddressInheritance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IpamsvcFixedAddressInheritance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IpamsvcFixedAddressInheritance.class));

       return (TypeAdapter<T>) new TypeAdapter<IpamsvcFixedAddressInheritance>() {
           @Override
           public void write(JsonWriter out, IpamsvcFixedAddressInheritance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IpamsvcFixedAddressInheritance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IpamsvcFixedAddressInheritance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IpamsvcFixedAddressInheritance
   * @throws IOException if the JSON string is invalid with respect to IpamsvcFixedAddressInheritance
   */
  public static IpamsvcFixedAddressInheritance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IpamsvcFixedAddressInheritance.class);
  }

  /**
   * Convert an instance of IpamsvcFixedAddressInheritance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

