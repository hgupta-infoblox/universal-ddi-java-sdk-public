/*
 * IP Address Management API
 * The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IpamsvcHAGroupHost;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An __HAGroup__ object (_dhcp/ha_group_) represents on-prem hosts that can serve the same leases for HA.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T12:10:31.429972+05:30[Asia/Kolkata]", comments = "Generator version: 7.12.0")
public class IpamsvcHAGroup {
  public static final String SERIALIZED_NAME_ANYCAST_CONFIG_ID = "anycast_config_id";
  @SerializedName(SERIALIZED_NAME_ANYCAST_CONFIG_ID)
  @javax.annotation.Nullable
  private String anycastConfigId;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  @javax.annotation.Nullable
  private String comment;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_HOSTS = "hosts";
  @SerializedName(SERIALIZED_NAME_HOSTS)
  @javax.annotation.Nonnull
  private List<IpamsvcHAGroupHost> hosts = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_IP_SPACE = "ip_space";
  @SerializedName(SERIALIZED_NAME_IP_SPACE)
  @javax.annotation.Nullable
  private String ipSpace;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  @javax.annotation.Nullable
  private String mode;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private String status;

  public static final String SERIALIZED_NAME_STATUS_V6 = "status_v6";
  @SerializedName(SERIALIZED_NAME_STATUS_V6)
  @javax.annotation.Nullable
  private String statusV6;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private Object tags;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime updatedAt;

  public IpamsvcHAGroup() {
  }

  public IpamsvcHAGroup(
     OffsetDateTime createdAt, 
     String id, 
     OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.id = id;
    this.updatedAt = updatedAt;
  }

  public IpamsvcHAGroup anycastConfigId(@javax.annotation.Nullable String anycastConfigId) {
    this.anycastConfigId = anycastConfigId;
    return this;
  }

  /**
   * The resource identifier.
   * @return anycastConfigId
   */
  @javax.annotation.Nullable
  public String getAnycastConfigId() {
    return anycastConfigId;
  }

  public void setAnycastConfigId(@javax.annotation.Nullable String anycastConfigId) {
    this.anycastConfigId = anycastConfigId;
  }


  public IpamsvcHAGroup comment(@javax.annotation.Nullable String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * The description for the HA group. May contain 0 to 1024 characters. Can include UTF-8.
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(@javax.annotation.Nullable String comment) {
    this.comment = comment;
  }


  /**
   * Time when the object has been created.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }



  public IpamsvcHAGroup hosts(@javax.annotation.Nonnull List<IpamsvcHAGroupHost> hosts) {
    this.hosts = hosts;
    return this;
  }

  public IpamsvcHAGroup addHostsItem(IpamsvcHAGroupHost hostsItem) {
    if (this.hosts == null) {
      this.hosts = new ArrayList<>();
    }
    this.hosts.add(hostsItem);
    return this;
  }

  /**
   * The list of hosts.
   * @return hosts
   */
  @javax.annotation.Nonnull
  public List<IpamsvcHAGroupHost> getHosts() {
    return hosts;
  }

  public void setHosts(@javax.annotation.Nonnull List<IpamsvcHAGroupHost> hosts) {
    this.hosts = hosts;
  }


  /**
   * The resource identifier.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public IpamsvcHAGroup ipSpace(@javax.annotation.Nullable String ipSpace) {
    this.ipSpace = ipSpace;
    return this;
  }

  /**
   * The resource identifier.
   * @return ipSpace
   */
  @javax.annotation.Nullable
  public String getIpSpace() {
    return ipSpace;
  }

  public void setIpSpace(@javax.annotation.Nullable String ipSpace) {
    this.ipSpace = ipSpace;
  }


  public IpamsvcHAGroup mode(@javax.annotation.Nullable String mode) {
    this.mode = mode;
    return this;
  }

  /**
   * The mode of the HA group.  Valid values are: * _active-active_: Both on-prem hosts remain active. * _active-passive_: One on-prem host remains active and one remains passive. When the active on-prem host is down, the passive on-prem host takes over. * _advanced-active-passive_: One on-prem host may be part of multiple HA groups. When the active on-prem host is down, the passive on-prem host takes over.
   * @return mode
   */
  @javax.annotation.Nullable
  public String getMode() {
    return mode;
  }

  public void setMode(@javax.annotation.Nullable String mode) {
    this.mode = mode;
  }


  public IpamsvcHAGroup name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the HA group. Must contain 1 to 256 characters. Can include UTF-8.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public IpamsvcHAGroup status(@javax.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * Status of the HA group. This field is set when the _collect_stats_ is set to _true_ in the _GET_ _/dhcp/ha_group_ request.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }


  public IpamsvcHAGroup statusV6(@javax.annotation.Nullable String statusV6) {
    this.statusV6 = statusV6;
    return this;
  }

  /**
   * Status of the DHCPv6 HA group. This field is set when the _collect_stats_ is set to _true_ in the _GET_ _/dhcp/ha_group_ request.
   * @return statusV6
   */
  @javax.annotation.Nullable
  public String getStatusV6() {
    return statusV6;
  }

  public void setStatusV6(@javax.annotation.Nullable String statusV6) {
    this.statusV6 = statusV6;
  }


  public IpamsvcHAGroup tags(@javax.annotation.Nullable Object tags) {
    this.tags = tags;
    return this;
  }

  /**
   * The tags for the HA group.
   * @return tags
   */
  @javax.annotation.Nullable
  public Object getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable Object tags) {
    this.tags = tags;
  }


  /**
   * Time when the object has been updated. Equals to _created_at_ if not updated after creation.
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IpamsvcHAGroup ipamsvcHAGroup = (IpamsvcHAGroup) o;
    return Objects.equals(this.anycastConfigId, ipamsvcHAGroup.anycastConfigId) &&
        Objects.equals(this.comment, ipamsvcHAGroup.comment) &&
        Objects.equals(this.createdAt, ipamsvcHAGroup.createdAt) &&
        Objects.equals(this.hosts, ipamsvcHAGroup.hosts) &&
        Objects.equals(this.id, ipamsvcHAGroup.id) &&
        Objects.equals(this.ipSpace, ipamsvcHAGroup.ipSpace) &&
        Objects.equals(this.mode, ipamsvcHAGroup.mode) &&
        Objects.equals(this.name, ipamsvcHAGroup.name) &&
        Objects.equals(this.status, ipamsvcHAGroup.status) &&
        Objects.equals(this.statusV6, ipamsvcHAGroup.statusV6) &&
        Objects.equals(this.tags, ipamsvcHAGroup.tags) &&
        Objects.equals(this.updatedAt, ipamsvcHAGroup.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(anycastConfigId, comment, createdAt, hosts, id, ipSpace, mode, name, status, statusV6, tags, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IpamsvcHAGroup {\n");
    sb.append("    anycastConfigId: ").append(toIndentedString(anycastConfigId)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    hosts: ").append(toIndentedString(hosts)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ipSpace: ").append(toIndentedString(ipSpace)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusV6: ").append(toIndentedString(statusV6)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("anycast_config_id");
    openapiFields.add("comment");
    openapiFields.add("created_at");
    openapiFields.add("hosts");
    openapiFields.add("id");
    openapiFields.add("ip_space");
    openapiFields.add("mode");
    openapiFields.add("name");
    openapiFields.add("status");
    openapiFields.add("status_v6");
    openapiFields.add("tags");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("hosts");
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IpamsvcHAGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IpamsvcHAGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IpamsvcHAGroup is not found in the empty JSON string", IpamsvcHAGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IpamsvcHAGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IpamsvcHAGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : IpamsvcHAGroup.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("anycast_config_id") != null && !jsonObj.get("anycast_config_id").isJsonNull()) && !jsonObj.get("anycast_config_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `anycast_config_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("anycast_config_id").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("hosts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `hosts` to be an array in the JSON string but got `%s`", jsonObj.get("hosts").toString()));
      }

      JsonArray jsonArrayhosts = jsonObj.getAsJsonArray("hosts");
      // validate the required field `hosts` (array)
      for (int i = 0; i < jsonArrayhosts.size(); i++) {
        IpamsvcHAGroupHost.validateJsonElement(jsonArrayhosts.get(i));
      };
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("ip_space") != null && !jsonObj.get("ip_space").isJsonNull()) && !jsonObj.get("ip_space").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_space` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_space").toString()));
      }
      if ((jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) && !jsonObj.get("mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mode").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("status_v6") != null && !jsonObj.get("status_v6").isJsonNull()) && !jsonObj.get("status_v6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_v6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_v6").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IpamsvcHAGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IpamsvcHAGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IpamsvcHAGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IpamsvcHAGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<IpamsvcHAGroup>() {
           @Override
           public void write(JsonWriter out, IpamsvcHAGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IpamsvcHAGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IpamsvcHAGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IpamsvcHAGroup
   * @throws IOException if the JSON string is invalid with respect to IpamsvcHAGroup
   */
  public static IpamsvcHAGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IpamsvcHAGroup.class);
  }

  /**
   * Convert an instance of IpamsvcHAGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

