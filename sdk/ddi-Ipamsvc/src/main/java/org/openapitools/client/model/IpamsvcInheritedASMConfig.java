/*
 * IP Address Management API
 * The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.InheritanceInheritedUInt32;
import org.openapitools.client.model.IpamsvcInheritedAsmEnableBlock;
import org.openapitools.client.model.IpamsvcInheritedAsmGrowthBlock;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The inheritance configuration for the __ASMConfig__ object.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T12:10:31.429972+05:30[Asia/Kolkata]", comments = "Generator version: 7.12.0")
public class IpamsvcInheritedASMConfig {
  public static final String SERIALIZED_NAME_ASM_ENABLE_BLOCK = "asm_enable_block";
  @SerializedName(SERIALIZED_NAME_ASM_ENABLE_BLOCK)
  @javax.annotation.Nullable
  private IpamsvcInheritedAsmEnableBlock asmEnableBlock;

  public static final String SERIALIZED_NAME_ASM_GROWTH_BLOCK = "asm_growth_block";
  @SerializedName(SERIALIZED_NAME_ASM_GROWTH_BLOCK)
  @javax.annotation.Nullable
  private IpamsvcInheritedAsmGrowthBlock asmGrowthBlock;

  public static final String SERIALIZED_NAME_ASM_THRESHOLD = "asm_threshold";
  @SerializedName(SERIALIZED_NAME_ASM_THRESHOLD)
  @javax.annotation.Nullable
  private InheritanceInheritedUInt32 asmThreshold;

  public static final String SERIALIZED_NAME_FORECAST_PERIOD = "forecast_period";
  @SerializedName(SERIALIZED_NAME_FORECAST_PERIOD)
  @javax.annotation.Nullable
  private InheritanceInheritedUInt32 forecastPeriod;

  public static final String SERIALIZED_NAME_HISTORY = "history";
  @SerializedName(SERIALIZED_NAME_HISTORY)
  @javax.annotation.Nullable
  private InheritanceInheritedUInt32 history;

  public static final String SERIALIZED_NAME_MIN_TOTAL = "min_total";
  @SerializedName(SERIALIZED_NAME_MIN_TOTAL)
  @javax.annotation.Nullable
  private InheritanceInheritedUInt32 minTotal;

  public static final String SERIALIZED_NAME_MIN_UNUSED = "min_unused";
  @SerializedName(SERIALIZED_NAME_MIN_UNUSED)
  @javax.annotation.Nullable
  private InheritanceInheritedUInt32 minUnused;

  public IpamsvcInheritedASMConfig() {
  }

  public IpamsvcInheritedASMConfig asmEnableBlock(@javax.annotation.Nullable IpamsvcInheritedAsmEnableBlock asmEnableBlock) {
    this.asmEnableBlock = asmEnableBlock;
    return this;
  }

  /**
   * Get asmEnableBlock
   * @return asmEnableBlock
   */
  @javax.annotation.Nullable
  public IpamsvcInheritedAsmEnableBlock getAsmEnableBlock() {
    return asmEnableBlock;
  }

  public void setAsmEnableBlock(@javax.annotation.Nullable IpamsvcInheritedAsmEnableBlock asmEnableBlock) {
    this.asmEnableBlock = asmEnableBlock;
  }


  public IpamsvcInheritedASMConfig asmGrowthBlock(@javax.annotation.Nullable IpamsvcInheritedAsmGrowthBlock asmGrowthBlock) {
    this.asmGrowthBlock = asmGrowthBlock;
    return this;
  }

  /**
   * Get asmGrowthBlock
   * @return asmGrowthBlock
   */
  @javax.annotation.Nullable
  public IpamsvcInheritedAsmGrowthBlock getAsmGrowthBlock() {
    return asmGrowthBlock;
  }

  public void setAsmGrowthBlock(@javax.annotation.Nullable IpamsvcInheritedAsmGrowthBlock asmGrowthBlock) {
    this.asmGrowthBlock = asmGrowthBlock;
  }


  public IpamsvcInheritedASMConfig asmThreshold(@javax.annotation.Nullable InheritanceInheritedUInt32 asmThreshold) {
    this.asmThreshold = asmThreshold;
    return this;
  }

  /**
   * Get asmThreshold
   * @return asmThreshold
   */
  @javax.annotation.Nullable
  public InheritanceInheritedUInt32 getAsmThreshold() {
    return asmThreshold;
  }

  public void setAsmThreshold(@javax.annotation.Nullable InheritanceInheritedUInt32 asmThreshold) {
    this.asmThreshold = asmThreshold;
  }


  public IpamsvcInheritedASMConfig forecastPeriod(@javax.annotation.Nullable InheritanceInheritedUInt32 forecastPeriod) {
    this.forecastPeriod = forecastPeriod;
    return this;
  }

  /**
   * Get forecastPeriod
   * @return forecastPeriod
   */
  @javax.annotation.Nullable
  public InheritanceInheritedUInt32 getForecastPeriod() {
    return forecastPeriod;
  }

  public void setForecastPeriod(@javax.annotation.Nullable InheritanceInheritedUInt32 forecastPeriod) {
    this.forecastPeriod = forecastPeriod;
  }


  public IpamsvcInheritedASMConfig history(@javax.annotation.Nullable InheritanceInheritedUInt32 history) {
    this.history = history;
    return this;
  }

  /**
   * Get history
   * @return history
   */
  @javax.annotation.Nullable
  public InheritanceInheritedUInt32 getHistory() {
    return history;
  }

  public void setHistory(@javax.annotation.Nullable InheritanceInheritedUInt32 history) {
    this.history = history;
  }


  public IpamsvcInheritedASMConfig minTotal(@javax.annotation.Nullable InheritanceInheritedUInt32 minTotal) {
    this.minTotal = minTotal;
    return this;
  }

  /**
   * Get minTotal
   * @return minTotal
   */
  @javax.annotation.Nullable
  public InheritanceInheritedUInt32 getMinTotal() {
    return minTotal;
  }

  public void setMinTotal(@javax.annotation.Nullable InheritanceInheritedUInt32 minTotal) {
    this.minTotal = minTotal;
  }


  public IpamsvcInheritedASMConfig minUnused(@javax.annotation.Nullable InheritanceInheritedUInt32 minUnused) {
    this.minUnused = minUnused;
    return this;
  }

  /**
   * Get minUnused
   * @return minUnused
   */
  @javax.annotation.Nullable
  public InheritanceInheritedUInt32 getMinUnused() {
    return minUnused;
  }

  public void setMinUnused(@javax.annotation.Nullable InheritanceInheritedUInt32 minUnused) {
    this.minUnused = minUnused;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IpamsvcInheritedASMConfig ipamsvcInheritedASMConfig = (IpamsvcInheritedASMConfig) o;
    return Objects.equals(this.asmEnableBlock, ipamsvcInheritedASMConfig.asmEnableBlock) &&
        Objects.equals(this.asmGrowthBlock, ipamsvcInheritedASMConfig.asmGrowthBlock) &&
        Objects.equals(this.asmThreshold, ipamsvcInheritedASMConfig.asmThreshold) &&
        Objects.equals(this.forecastPeriod, ipamsvcInheritedASMConfig.forecastPeriod) &&
        Objects.equals(this.history, ipamsvcInheritedASMConfig.history) &&
        Objects.equals(this.minTotal, ipamsvcInheritedASMConfig.minTotal) &&
        Objects.equals(this.minUnused, ipamsvcInheritedASMConfig.minUnused);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asmEnableBlock, asmGrowthBlock, asmThreshold, forecastPeriod, history, minTotal, minUnused);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IpamsvcInheritedASMConfig {\n");
    sb.append("    asmEnableBlock: ").append(toIndentedString(asmEnableBlock)).append("\n");
    sb.append("    asmGrowthBlock: ").append(toIndentedString(asmGrowthBlock)).append("\n");
    sb.append("    asmThreshold: ").append(toIndentedString(asmThreshold)).append("\n");
    sb.append("    forecastPeriod: ").append(toIndentedString(forecastPeriod)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("    minTotal: ").append(toIndentedString(minTotal)).append("\n");
    sb.append("    minUnused: ").append(toIndentedString(minUnused)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("asm_enable_block");
    openapiFields.add("asm_growth_block");
    openapiFields.add("asm_threshold");
    openapiFields.add("forecast_period");
    openapiFields.add("history");
    openapiFields.add("min_total");
    openapiFields.add("min_unused");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IpamsvcInheritedASMConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IpamsvcInheritedASMConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IpamsvcInheritedASMConfig is not found in the empty JSON string", IpamsvcInheritedASMConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IpamsvcInheritedASMConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IpamsvcInheritedASMConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `asm_enable_block`
      if (jsonObj.get("asm_enable_block") != null && !jsonObj.get("asm_enable_block").isJsonNull()) {
        IpamsvcInheritedAsmEnableBlock.validateJsonElement(jsonObj.get("asm_enable_block"));
      }
      // validate the optional field `asm_growth_block`
      if (jsonObj.get("asm_growth_block") != null && !jsonObj.get("asm_growth_block").isJsonNull()) {
        IpamsvcInheritedAsmGrowthBlock.validateJsonElement(jsonObj.get("asm_growth_block"));
      }
      // validate the optional field `asm_threshold`
      if (jsonObj.get("asm_threshold") != null && !jsonObj.get("asm_threshold").isJsonNull()) {
        InheritanceInheritedUInt32.validateJsonElement(jsonObj.get("asm_threshold"));
      }
      // validate the optional field `forecast_period`
      if (jsonObj.get("forecast_period") != null && !jsonObj.get("forecast_period").isJsonNull()) {
        InheritanceInheritedUInt32.validateJsonElement(jsonObj.get("forecast_period"));
      }
      // validate the optional field `history`
      if (jsonObj.get("history") != null && !jsonObj.get("history").isJsonNull()) {
        InheritanceInheritedUInt32.validateJsonElement(jsonObj.get("history"));
      }
      // validate the optional field `min_total`
      if (jsonObj.get("min_total") != null && !jsonObj.get("min_total").isJsonNull()) {
        InheritanceInheritedUInt32.validateJsonElement(jsonObj.get("min_total"));
      }
      // validate the optional field `min_unused`
      if (jsonObj.get("min_unused") != null && !jsonObj.get("min_unused").isJsonNull()) {
        InheritanceInheritedUInt32.validateJsonElement(jsonObj.get("min_unused"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IpamsvcInheritedASMConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IpamsvcInheritedASMConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IpamsvcInheritedASMConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IpamsvcInheritedASMConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<IpamsvcInheritedASMConfig>() {
           @Override
           public void write(JsonWriter out, IpamsvcInheritedASMConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IpamsvcInheritedASMConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IpamsvcInheritedASMConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IpamsvcInheritedASMConfig
   * @throws IOException if the JSON string is invalid with respect to IpamsvcInheritedASMConfig
   */
  public static IpamsvcInheritedASMConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IpamsvcInheritedASMConfig.class);
  }

  /**
   * Convert an instance of IpamsvcInheritedASMConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

