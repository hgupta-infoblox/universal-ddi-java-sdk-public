/*
 * IP Address Management API
 * The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.InheritanceAssignedHost;
import org.openapitools.client.model.IpamsvcFixedAddressInheritance;
import org.openapitools.client.model.IpamsvcOptionItem;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IpamsvcFixedAddress
 */
public class IpamsvcFixedAddressTest {
    private final IpamsvcFixedAddress model = new IpamsvcFixedAddress();

    /**
     * Model tests for IpamsvcFixedAddress
     */
    @Test
    public void testIpamsvcFixedAddress() {
        // TODO: test IpamsvcFixedAddress
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'compartmentId'
     */
    @Test
    public void compartmentIdTest() {
        // TODO: test compartmentId
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'dhcpOptions'
     */
    @Test
    public void dhcpOptionsTest() {
        // TODO: test dhcpOptions
    }

    /**
     * Test the property 'disableDhcp'
     */
    @Test
    public void disableDhcpTest() {
        // TODO: test disableDhcp
    }

    /**
     * Test the property 'headerOptionFilename'
     */
    @Test
    public void headerOptionFilenameTest() {
        // TODO: test headerOptionFilename
    }

    /**
     * Test the property 'headerOptionServerAddress'
     */
    @Test
    public void headerOptionServerAddressTest() {
        // TODO: test headerOptionServerAddress
    }

    /**
     * Test the property 'headerOptionServerName'
     */
    @Test
    public void headerOptionServerNameTest() {
        // TODO: test headerOptionServerName
    }

    /**
     * Test the property 'hostname'
     */
    @Test
    public void hostnameTest() {
        // TODO: test hostname
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'inheritanceAssignedHosts'
     */
    @Test
    public void inheritanceAssignedHostsTest() {
        // TODO: test inheritanceAssignedHosts
    }

    /**
     * Test the property 'inheritanceParent'
     */
    @Test
    public void inheritanceParentTest() {
        // TODO: test inheritanceParent
    }

    /**
     * Test the property 'inheritanceSources'
     */
    @Test
    public void inheritanceSourcesTest() {
        // TODO: test inheritanceSources
    }

    /**
     * Test the property 'ipSpace'
     */
    @Test
    public void ipSpaceTest() {
        // TODO: test ipSpace
    }

    /**
     * Test the property 'matchType'
     */
    @Test
    public void matchTypeTest() {
        // TODO: test matchType
    }

    /**
     * Test the property 'matchValue'
     */
    @Test
    public void matchValueTest() {
        // TODO: test matchValue
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'parent'
     */
    @Test
    public void parentTest() {
        // TODO: test parent
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

}
