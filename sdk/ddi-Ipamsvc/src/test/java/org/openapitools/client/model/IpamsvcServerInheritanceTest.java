/*
 * IP Address Management API
 * The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.InheritanceInheritedBool;
import org.openapitools.client.model.InheritanceInheritedFloat;
import org.openapitools.client.model.InheritanceInheritedIdentifier;
import org.openapitools.client.model.InheritanceInheritedString;
import org.openapitools.client.model.IpamsvcInheritedDDNSBlock;
import org.openapitools.client.model.IpamsvcInheritedDDNSHostnameBlock;
import org.openapitools.client.model.IpamsvcInheritedDHCPConfig;
import org.openapitools.client.model.IpamsvcInheritedDHCPOptionList;
import org.openapitools.client.model.IpamsvcInheritedHostnameRewriteBlock;
import org.openapitools.client.model.IpamsvcInheritedLoggingConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IpamsvcServerInheritance
 */
public class IpamsvcServerInheritanceTest {
    private final IpamsvcServerInheritance model = new IpamsvcServerInheritance();

    /**
     * Model tests for IpamsvcServerInheritance
     */
    @Test
    public void testIpamsvcServerInheritance() {
        // TODO: test IpamsvcServerInheritance
    }

    /**
     * Test the property 'ddnsBlock'
     */
    @Test
    public void ddnsBlockTest() {
        // TODO: test ddnsBlock
    }

    /**
     * Test the property 'ddnsClientUpdate'
     */
    @Test
    public void ddnsClientUpdateTest() {
        // TODO: test ddnsClientUpdate
    }

    /**
     * Test the property 'ddnsConflictResolutionMode'
     */
    @Test
    public void ddnsConflictResolutionModeTest() {
        // TODO: test ddnsConflictResolutionMode
    }

    /**
     * Test the property 'ddnsHostnameBlock'
     */
    @Test
    public void ddnsHostnameBlockTest() {
        // TODO: test ddnsHostnameBlock
    }

    /**
     * Test the property 'ddnsTtlPercent'
     */
    @Test
    public void ddnsTtlPercentTest() {
        // TODO: test ddnsTtlPercent
    }

    /**
     * Test the property 'ddnsUpdateOnRenew'
     */
    @Test
    public void ddnsUpdateOnRenewTest() {
        // TODO: test ddnsUpdateOnRenew
    }

    /**
     * Test the property 'ddnsUseConflictResolution'
     */
    @Test
    public void ddnsUseConflictResolutionTest() {
        // TODO: test ddnsUseConflictResolution
    }

    /**
     * Test the property 'dhcpConfig'
     */
    @Test
    public void dhcpConfigTest() {
        // TODO: test dhcpConfig
    }

    /**
     * Test the property 'dhcpOptions'
     */
    @Test
    public void dhcpOptionsTest() {
        // TODO: test dhcpOptions
    }

    /**
     * Test the property 'dhcpOptionsV6'
     */
    @Test
    public void dhcpOptionsV6Test() {
        // TODO: test dhcpOptionsV6
    }

    /**
     * Test the property 'headerOptionFilename'
     */
    @Test
    public void headerOptionFilenameTest() {
        // TODO: test headerOptionFilename
    }

    /**
     * Test the property 'headerOptionServerAddress'
     */
    @Test
    public void headerOptionServerAddressTest() {
        // TODO: test headerOptionServerAddress
    }

    /**
     * Test the property 'headerOptionServerName'
     */
    @Test
    public void headerOptionServerNameTest() {
        // TODO: test headerOptionServerName
    }

    /**
     * Test the property 'hostnameRewriteBlock'
     */
    @Test
    public void hostnameRewriteBlockTest() {
        // TODO: test hostnameRewriteBlock
    }

    /**
     * Test the property 'loggingConfiguration'
     */
    @Test
    public void loggingConfigurationTest() {
        // TODO: test loggingConfiguration
    }

    /**
     * Test the property 'vendorSpecificOptionOptionSpace'
     */
    @Test
    public void vendorSpecificOptionOptionSpaceTest() {
        // TODO: test vendorSpecificOptionOptionSpace
    }

}
