/*
 * IP Address Management API
 * The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IpamsvcInteger128;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IpamsvcUtilizationV6
 */
public class IpamsvcUtilizationV6Test {
    private final IpamsvcUtilizationV6 model = new IpamsvcUtilizationV6();

    /**
     * Model tests for IpamsvcUtilizationV6
     */
    @Test
    public void testIpamsvcUtilizationV6() {
        // TODO: test IpamsvcUtilizationV6
    }

    /**
     * Test the property 'abandoned'
     */
    @Test
    public void abandonedTest() {
        // TODO: test abandoned
    }

    /**
     * Test the property 'dynamic'
     */
    @Test
    public void dynamicTest() {
        // TODO: test dynamic
    }

    /**
     * Test the property '_static'
     */
    @Test
    public void _staticTest() {
        // TODO: test _static
    }

    /**
     * Test the property 'total'
     */
    @Test
    public void totalTest() {
        // TODO: test total
    }

    /**
     * Test the property 'used'
     */
    @Test
    public void usedTest() {
        // TODO: test used
    }

}
