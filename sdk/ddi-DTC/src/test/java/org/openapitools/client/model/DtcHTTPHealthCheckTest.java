/*
 * DNS DTC API
 * The DNS DTC is a BloxOne DDI service providing load balanced DNS resolution.   
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DtcHeaderRegex;
import org.openapitools.client.model.DtcMetadata;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DtcHTTPHealthCheck
 */
public class DtcHTTPHealthCheckTest {
    private final DtcHTTPHealthCheck model = new DtcHTTPHealthCheck();

    /**
     * Model tests for DtcHTTPHealthCheck
     */
    @Test
    public void testDtcHTTPHealthCheck() {
        // TODO: test DtcHTTPHealthCheck
    }

    /**
     * Test the property 'checkResponseBody'
     */
    @Test
    public void checkResponseBodyTest() {
        // TODO: test checkResponseBody
    }

    /**
     * Test the property 'checkResponseBodyNegative'
     */
    @Test
    public void checkResponseBodyNegativeTest() {
        // TODO: test checkResponseBodyNegative
    }

    /**
     * Test the property 'checkResponseBodyRegex'
     */
    @Test
    public void checkResponseBodyRegexTest() {
        // TODO: test checkResponseBodyRegex
    }

    /**
     * Test the property 'checkResponseHeader'
     */
    @Test
    public void checkResponseHeaderTest() {
        // TODO: test checkResponseHeader
    }

    /**
     * Test the property 'checkResponseHeaderNegative'
     */
    @Test
    public void checkResponseHeaderNegativeTest() {
        // TODO: test checkResponseHeaderNegative
    }

    /**
     * Test the property 'checkResponseHeaderRegexes'
     */
    @Test
    public void checkResponseHeaderRegexesTest() {
        // TODO: test checkResponseHeaderRegexes
    }

    /**
     * Test the property 'codes'
     */
    @Test
    public void codesTest() {
        // TODO: test codes
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'disabled'
     */
    @Test
    public void disabledTest() {
        // TODO: test disabled
    }

    /**
     * Test the property 'https'
     */
    @Test
    public void httpsTest() {
        // TODO: test https
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'interval'
     */
    @Test
    public void intervalTest() {
        // TODO: test interval
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'request'
     */
    @Test
    public void requestTest() {
        // TODO: test request
    }

    /**
     * Test the property 'retryDown'
     */
    @Test
    public void retryDownTest() {
        // TODO: test retryDown
    }

    /**
     * Test the property 'retryUp'
     */
    @Test
    public void retryUpTest() {
        // TODO: test retryUp
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'timeout'
     */
    @Test
    public void timeoutTest() {
        // TODO: test timeout
    }

}
