/*
 * IPAM Federation API
 * The DDI IPAM Federation application enables a SaaS administrator to manage multiple IPAM systems from one central control point CSP.    
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FederationNextAvailableBlockRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T12:10:30.478556+05:30[Asia/Kolkata]", comments = "Generator version: 7.12.0")
public class FederationNextAvailableBlockRequest {
  public static final String SERIALIZED_NAME_CIDR = "cidr";
  @SerializedName(SERIALIZED_NAME_CIDR)
  @javax.annotation.Nullable
  private Long cidr;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  @javax.annotation.Nullable
  private String comment;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  @javax.annotation.Nullable
  private Long count;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private Object tags;

  public FederationNextAvailableBlockRequest() {
  }

  public FederationNextAvailableBlockRequest(
     String id
  ) {
    this();
    this.id = id;
  }

  public FederationNextAvailableBlockRequest cidr(@javax.annotation.Nullable Long cidr) {
    this.cidr = cidr;
    return this;
  }

  /**
   * The CIDR of the federated block. This is required, if _address_ does not specify it in its input.
   * minimum: 1
   * maximum: 128
   * @return cidr
   */
  @javax.annotation.Nullable
  public Long getCidr() {
    return cidr;
  }

  public void setCidr(@javax.annotation.Nullable Long cidr) {
    this.cidr = cidr;
  }


  public FederationNextAvailableBlockRequest comment(@javax.annotation.Nullable String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * The description for the _federation/federated_block_. May contain 0 to 1024 characters. Can include UTF-8.
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(@javax.annotation.Nullable String comment) {
    this.comment = comment;
  }


  public FederationNextAvailableBlockRequest count(@javax.annotation.Nullable Long count) {
    this.count = count;
    return this;
  }

  /**
   * The count of __Block__ required. If not provided, it will default to 1.
   * @return count
   */
  @javax.annotation.Nullable
  public Long getCount() {
    return count;
  }

  public void setCount(@javax.annotation.Nullable Long count) {
    this.count = count;
  }


  /**
   * The resource identifier.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public FederationNextAvailableBlockRequest name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * The name to be provided.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public FederationNextAvailableBlockRequest tags(@javax.annotation.Nullable Object tags) {
    this.tags = tags;
    return this;
  }

  /**
   * The tags for the federated block in JSON format.
   * @return tags
   */
  @javax.annotation.Nullable
  public Object getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable Object tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FederationNextAvailableBlockRequest federationNextAvailableBlockRequest = (FederationNextAvailableBlockRequest) o;
    return Objects.equals(this.cidr, federationNextAvailableBlockRequest.cidr) &&
        Objects.equals(this.comment, federationNextAvailableBlockRequest.comment) &&
        Objects.equals(this.count, federationNextAvailableBlockRequest.count) &&
        Objects.equals(this.id, federationNextAvailableBlockRequest.id) &&
        Objects.equals(this.name, federationNextAvailableBlockRequest.name) &&
        Objects.equals(this.tags, federationNextAvailableBlockRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cidr, comment, count, id, name, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FederationNextAvailableBlockRequest {\n");
    sb.append("    cidr: ").append(toIndentedString(cidr)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cidr");
    openapiFields.add("comment");
    openapiFields.add("count");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FederationNextAvailableBlockRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FederationNextAvailableBlockRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FederationNextAvailableBlockRequest is not found in the empty JSON string", FederationNextAvailableBlockRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FederationNextAvailableBlockRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FederationNextAvailableBlockRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FederationNextAvailableBlockRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FederationNextAvailableBlockRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FederationNextAvailableBlockRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FederationNextAvailableBlockRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<FederationNextAvailableBlockRequest>() {
           @Override
           public void write(JsonWriter out, FederationNextAvailableBlockRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FederationNextAvailableBlockRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FederationNextAvailableBlockRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FederationNextAvailableBlockRequest
   * @throws IOException if the JSON string is invalid with respect to FederationNextAvailableBlockRequest
   */
  public static FederationNextAvailableBlockRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FederationNextAvailableBlockRequest.class);
  }

  /**
   * Convert an instance of FederationNextAvailableBlockRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

