/*
 * DNS Configuration API
 * The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.   
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ConfigInheritedACLItems;
import org.openapitools.client.model.ConfigInheritedCustomRootNSBlock;
import org.openapitools.client.model.ConfigInheritedDNSSECValidationBlock;
import org.openapitools.client.model.ConfigInheritedDtcConfig;
import org.openapitools.client.model.ConfigInheritedECSBlock;
import org.openapitools.client.model.ConfigInheritedForwardersBlock;
import org.openapitools.client.model.ConfigInheritedSortListItems;
import org.openapitools.client.model.ConfigInheritedZoneAuthority;
import org.openapitools.client.model.Inheritance2InheritedBool;
import org.openapitools.client.model.Inheritance2InheritedString;
import org.openapitools.client.model.Inheritance2InheritedUInt32;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Inheritance configuration specifies how and which fields _View_ object inherits from [ _Global_, _Server_ ] parent.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T12:10:28.384903+05:30[Asia/Kolkata]", comments = "Generator version: 7.12.0")
public class ConfigViewInheritance {
  public static final String SERIALIZED_NAME_ADD_EDNS_OPTION_IN_OUTGOING_QUERY = "add_edns_option_in_outgoing_query";
  @SerializedName(SERIALIZED_NAME_ADD_EDNS_OPTION_IN_OUTGOING_QUERY)
  @javax.annotation.Nullable
  private Inheritance2InheritedBool addEdnsOptionInOutgoingQuery;

  public static final String SERIALIZED_NAME_CUSTOM_ROOT_NS_BLOCK = "custom_root_ns_block";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ROOT_NS_BLOCK)
  @javax.annotation.Nullable
  private ConfigInheritedCustomRootNSBlock customRootNsBlock;

  public static final String SERIALIZED_NAME_DNSSEC_VALIDATION_BLOCK = "dnssec_validation_block";
  @SerializedName(SERIALIZED_NAME_DNSSEC_VALIDATION_BLOCK)
  @javax.annotation.Nullable
  private ConfigInheritedDNSSECValidationBlock dnssecValidationBlock;

  public static final String SERIALIZED_NAME_DTC_CONFIG = "dtc_config";
  @SerializedName(SERIALIZED_NAME_DTC_CONFIG)
  @javax.annotation.Nullable
  private ConfigInheritedDtcConfig dtcConfig;

  public static final String SERIALIZED_NAME_ECS_BLOCK = "ecs_block";
  @SerializedName(SERIALIZED_NAME_ECS_BLOCK)
  @javax.annotation.Nullable
  private ConfigInheritedECSBlock ecsBlock;

  public static final String SERIALIZED_NAME_EDNS_UDP_SIZE = "edns_udp_size";
  @SerializedName(SERIALIZED_NAME_EDNS_UDP_SIZE)
  @javax.annotation.Nullable
  private Inheritance2InheritedUInt32 ednsUdpSize;

  public static final String SERIALIZED_NAME_FILTER_AAAA_ACL = "filter_aaaa_acl";
  @SerializedName(SERIALIZED_NAME_FILTER_AAAA_ACL)
  @javax.annotation.Nullable
  private ConfigInheritedACLItems filterAaaaAcl;

  public static final String SERIALIZED_NAME_FILTER_AAAA_ON_V4 = "filter_aaaa_on_v4";
  @SerializedName(SERIALIZED_NAME_FILTER_AAAA_ON_V4)
  @javax.annotation.Nullable
  private Inheritance2InheritedString filterAaaaOnV4;

  public static final String SERIALIZED_NAME_FORWARDERS_BLOCK = "forwarders_block";
  @SerializedName(SERIALIZED_NAME_FORWARDERS_BLOCK)
  @javax.annotation.Nullable
  private ConfigInheritedForwardersBlock forwardersBlock;

  public static final String SERIALIZED_NAME_GSS_TSIG_ENABLED = "gss_tsig_enabled";
  @SerializedName(SERIALIZED_NAME_GSS_TSIG_ENABLED)
  @javax.annotation.Nullable
  private Inheritance2InheritedBool gssTsigEnabled;

  public static final String SERIALIZED_NAME_LAME_TTL = "lame_ttl";
  @SerializedName(SERIALIZED_NAME_LAME_TTL)
  @javax.annotation.Nullable
  private Inheritance2InheritedUInt32 lameTtl;

  public static final String SERIALIZED_NAME_MATCH_RECURSIVE_ONLY = "match_recursive_only";
  @SerializedName(SERIALIZED_NAME_MATCH_RECURSIVE_ONLY)
  @javax.annotation.Nullable
  private Inheritance2InheritedBool matchRecursiveOnly;

  public static final String SERIALIZED_NAME_MAX_CACHE_TTL = "max_cache_ttl";
  @SerializedName(SERIALIZED_NAME_MAX_CACHE_TTL)
  @javax.annotation.Nullable
  private Inheritance2InheritedUInt32 maxCacheTtl;

  public static final String SERIALIZED_NAME_MAX_NEGATIVE_TTL = "max_negative_ttl";
  @SerializedName(SERIALIZED_NAME_MAX_NEGATIVE_TTL)
  @javax.annotation.Nullable
  private Inheritance2InheritedUInt32 maxNegativeTtl;

  public static final String SERIALIZED_NAME_MAX_UDP_SIZE = "max_udp_size";
  @SerializedName(SERIALIZED_NAME_MAX_UDP_SIZE)
  @javax.annotation.Nullable
  private Inheritance2InheritedUInt32 maxUdpSize;

  public static final String SERIALIZED_NAME_MINIMAL_RESPONSES = "minimal_responses";
  @SerializedName(SERIALIZED_NAME_MINIMAL_RESPONSES)
  @javax.annotation.Nullable
  private Inheritance2InheritedBool minimalResponses;

  public static final String SERIALIZED_NAME_NOTIFY = "notify";
  @SerializedName(SERIALIZED_NAME_NOTIFY)
  @javax.annotation.Nullable
  private Inheritance2InheritedBool notify;

  public static final String SERIALIZED_NAME_QUERY_ACL = "query_acl";
  @SerializedName(SERIALIZED_NAME_QUERY_ACL)
  @javax.annotation.Nullable
  private ConfigInheritedACLItems queryAcl;

  public static final String SERIALIZED_NAME_RECURSION_ACL = "recursion_acl";
  @SerializedName(SERIALIZED_NAME_RECURSION_ACL)
  @javax.annotation.Nullable
  private ConfigInheritedACLItems recursionAcl;

  public static final String SERIALIZED_NAME_RECURSION_ENABLED = "recursion_enabled";
  @SerializedName(SERIALIZED_NAME_RECURSION_ENABLED)
  @javax.annotation.Nullable
  private Inheritance2InheritedBool recursionEnabled;

  public static final String SERIALIZED_NAME_SORT_LIST = "sort_list";
  @SerializedName(SERIALIZED_NAME_SORT_LIST)
  @javax.annotation.Nullable
  private ConfigInheritedSortListItems sortList;

  public static final String SERIALIZED_NAME_SYNTHESIZE_ADDRESS_RECORDS_FROM_HTTPS = "synthesize_address_records_from_https";
  @SerializedName(SERIALIZED_NAME_SYNTHESIZE_ADDRESS_RECORDS_FROM_HTTPS)
  @javax.annotation.Nullable
  private Inheritance2InheritedBool synthesizeAddressRecordsFromHttps;

  public static final String SERIALIZED_NAME_TRANSFER_ACL = "transfer_acl";
  @SerializedName(SERIALIZED_NAME_TRANSFER_ACL)
  @javax.annotation.Nullable
  private ConfigInheritedACLItems transferAcl;

  public static final String SERIALIZED_NAME_UPDATE_ACL = "update_acl";
  @SerializedName(SERIALIZED_NAME_UPDATE_ACL)
  @javax.annotation.Nullable
  private ConfigInheritedACLItems updateAcl;

  public static final String SERIALIZED_NAME_USE_FORWARDERS_FOR_SUBZONES = "use_forwarders_for_subzones";
  @SerializedName(SERIALIZED_NAME_USE_FORWARDERS_FOR_SUBZONES)
  @javax.annotation.Nullable
  private Inheritance2InheritedBool useForwardersForSubzones;

  public static final String SERIALIZED_NAME_ZONE_AUTHORITY = "zone_authority";
  @SerializedName(SERIALIZED_NAME_ZONE_AUTHORITY)
  @javax.annotation.Nullable
  private ConfigInheritedZoneAuthority zoneAuthority;

  public ConfigViewInheritance() {
  }

  public ConfigViewInheritance addEdnsOptionInOutgoingQuery(@javax.annotation.Nullable Inheritance2InheritedBool addEdnsOptionInOutgoingQuery) {
    this.addEdnsOptionInOutgoingQuery = addEdnsOptionInOutgoingQuery;
    return this;
  }

  /**
   * Get addEdnsOptionInOutgoingQuery
   * @return addEdnsOptionInOutgoingQuery
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedBool getAddEdnsOptionInOutgoingQuery() {
    return addEdnsOptionInOutgoingQuery;
  }

  public void setAddEdnsOptionInOutgoingQuery(@javax.annotation.Nullable Inheritance2InheritedBool addEdnsOptionInOutgoingQuery) {
    this.addEdnsOptionInOutgoingQuery = addEdnsOptionInOutgoingQuery;
  }


  public ConfigViewInheritance customRootNsBlock(@javax.annotation.Nullable ConfigInheritedCustomRootNSBlock customRootNsBlock) {
    this.customRootNsBlock = customRootNsBlock;
    return this;
  }

  /**
   * Get customRootNsBlock
   * @return customRootNsBlock
   */
  @javax.annotation.Nullable
  public ConfigInheritedCustomRootNSBlock getCustomRootNsBlock() {
    return customRootNsBlock;
  }

  public void setCustomRootNsBlock(@javax.annotation.Nullable ConfigInheritedCustomRootNSBlock customRootNsBlock) {
    this.customRootNsBlock = customRootNsBlock;
  }


  public ConfigViewInheritance dnssecValidationBlock(@javax.annotation.Nullable ConfigInheritedDNSSECValidationBlock dnssecValidationBlock) {
    this.dnssecValidationBlock = dnssecValidationBlock;
    return this;
  }

  /**
   * Get dnssecValidationBlock
   * @return dnssecValidationBlock
   */
  @javax.annotation.Nullable
  public ConfigInheritedDNSSECValidationBlock getDnssecValidationBlock() {
    return dnssecValidationBlock;
  }

  public void setDnssecValidationBlock(@javax.annotation.Nullable ConfigInheritedDNSSECValidationBlock dnssecValidationBlock) {
    this.dnssecValidationBlock = dnssecValidationBlock;
  }


  public ConfigViewInheritance dtcConfig(@javax.annotation.Nullable ConfigInheritedDtcConfig dtcConfig) {
    this.dtcConfig = dtcConfig;
    return this;
  }

  /**
   * Get dtcConfig
   * @return dtcConfig
   */
  @javax.annotation.Nullable
  public ConfigInheritedDtcConfig getDtcConfig() {
    return dtcConfig;
  }

  public void setDtcConfig(@javax.annotation.Nullable ConfigInheritedDtcConfig dtcConfig) {
    this.dtcConfig = dtcConfig;
  }


  public ConfigViewInheritance ecsBlock(@javax.annotation.Nullable ConfigInheritedECSBlock ecsBlock) {
    this.ecsBlock = ecsBlock;
    return this;
  }

  /**
   * Get ecsBlock
   * @return ecsBlock
   */
  @javax.annotation.Nullable
  public ConfigInheritedECSBlock getEcsBlock() {
    return ecsBlock;
  }

  public void setEcsBlock(@javax.annotation.Nullable ConfigInheritedECSBlock ecsBlock) {
    this.ecsBlock = ecsBlock;
  }


  public ConfigViewInheritance ednsUdpSize(@javax.annotation.Nullable Inheritance2InheritedUInt32 ednsUdpSize) {
    this.ednsUdpSize = ednsUdpSize;
    return this;
  }

  /**
   * Get ednsUdpSize
   * @return ednsUdpSize
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedUInt32 getEdnsUdpSize() {
    return ednsUdpSize;
  }

  public void setEdnsUdpSize(@javax.annotation.Nullable Inheritance2InheritedUInt32 ednsUdpSize) {
    this.ednsUdpSize = ednsUdpSize;
  }


  public ConfigViewInheritance filterAaaaAcl(@javax.annotation.Nullable ConfigInheritedACLItems filterAaaaAcl) {
    this.filterAaaaAcl = filterAaaaAcl;
    return this;
  }

  /**
   * Get filterAaaaAcl
   * @return filterAaaaAcl
   */
  @javax.annotation.Nullable
  public ConfigInheritedACLItems getFilterAaaaAcl() {
    return filterAaaaAcl;
  }

  public void setFilterAaaaAcl(@javax.annotation.Nullable ConfigInheritedACLItems filterAaaaAcl) {
    this.filterAaaaAcl = filterAaaaAcl;
  }


  public ConfigViewInheritance filterAaaaOnV4(@javax.annotation.Nullable Inheritance2InheritedString filterAaaaOnV4) {
    this.filterAaaaOnV4 = filterAaaaOnV4;
    return this;
  }

  /**
   * Get filterAaaaOnV4
   * @return filterAaaaOnV4
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedString getFilterAaaaOnV4() {
    return filterAaaaOnV4;
  }

  public void setFilterAaaaOnV4(@javax.annotation.Nullable Inheritance2InheritedString filterAaaaOnV4) {
    this.filterAaaaOnV4 = filterAaaaOnV4;
  }


  public ConfigViewInheritance forwardersBlock(@javax.annotation.Nullable ConfigInheritedForwardersBlock forwardersBlock) {
    this.forwardersBlock = forwardersBlock;
    return this;
  }

  /**
   * Get forwardersBlock
   * @return forwardersBlock
   */
  @javax.annotation.Nullable
  public ConfigInheritedForwardersBlock getForwardersBlock() {
    return forwardersBlock;
  }

  public void setForwardersBlock(@javax.annotation.Nullable ConfigInheritedForwardersBlock forwardersBlock) {
    this.forwardersBlock = forwardersBlock;
  }


  public ConfigViewInheritance gssTsigEnabled(@javax.annotation.Nullable Inheritance2InheritedBool gssTsigEnabled) {
    this.gssTsigEnabled = gssTsigEnabled;
    return this;
  }

  /**
   * Get gssTsigEnabled
   * @return gssTsigEnabled
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedBool getGssTsigEnabled() {
    return gssTsigEnabled;
  }

  public void setGssTsigEnabled(@javax.annotation.Nullable Inheritance2InheritedBool gssTsigEnabled) {
    this.gssTsigEnabled = gssTsigEnabled;
  }


  public ConfigViewInheritance lameTtl(@javax.annotation.Nullable Inheritance2InheritedUInt32 lameTtl) {
    this.lameTtl = lameTtl;
    return this;
  }

  /**
   * Get lameTtl
   * @return lameTtl
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedUInt32 getLameTtl() {
    return lameTtl;
  }

  public void setLameTtl(@javax.annotation.Nullable Inheritance2InheritedUInt32 lameTtl) {
    this.lameTtl = lameTtl;
  }


  public ConfigViewInheritance matchRecursiveOnly(@javax.annotation.Nullable Inheritance2InheritedBool matchRecursiveOnly) {
    this.matchRecursiveOnly = matchRecursiveOnly;
    return this;
  }

  /**
   * Get matchRecursiveOnly
   * @return matchRecursiveOnly
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedBool getMatchRecursiveOnly() {
    return matchRecursiveOnly;
  }

  public void setMatchRecursiveOnly(@javax.annotation.Nullable Inheritance2InheritedBool matchRecursiveOnly) {
    this.matchRecursiveOnly = matchRecursiveOnly;
  }


  public ConfigViewInheritance maxCacheTtl(@javax.annotation.Nullable Inheritance2InheritedUInt32 maxCacheTtl) {
    this.maxCacheTtl = maxCacheTtl;
    return this;
  }

  /**
   * Get maxCacheTtl
   * @return maxCacheTtl
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedUInt32 getMaxCacheTtl() {
    return maxCacheTtl;
  }

  public void setMaxCacheTtl(@javax.annotation.Nullable Inheritance2InheritedUInt32 maxCacheTtl) {
    this.maxCacheTtl = maxCacheTtl;
  }


  public ConfigViewInheritance maxNegativeTtl(@javax.annotation.Nullable Inheritance2InheritedUInt32 maxNegativeTtl) {
    this.maxNegativeTtl = maxNegativeTtl;
    return this;
  }

  /**
   * Get maxNegativeTtl
   * @return maxNegativeTtl
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedUInt32 getMaxNegativeTtl() {
    return maxNegativeTtl;
  }

  public void setMaxNegativeTtl(@javax.annotation.Nullable Inheritance2InheritedUInt32 maxNegativeTtl) {
    this.maxNegativeTtl = maxNegativeTtl;
  }


  public ConfigViewInheritance maxUdpSize(@javax.annotation.Nullable Inheritance2InheritedUInt32 maxUdpSize) {
    this.maxUdpSize = maxUdpSize;
    return this;
  }

  /**
   * Get maxUdpSize
   * @return maxUdpSize
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedUInt32 getMaxUdpSize() {
    return maxUdpSize;
  }

  public void setMaxUdpSize(@javax.annotation.Nullable Inheritance2InheritedUInt32 maxUdpSize) {
    this.maxUdpSize = maxUdpSize;
  }


  public ConfigViewInheritance minimalResponses(@javax.annotation.Nullable Inheritance2InheritedBool minimalResponses) {
    this.minimalResponses = minimalResponses;
    return this;
  }

  /**
   * Get minimalResponses
   * @return minimalResponses
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedBool getMinimalResponses() {
    return minimalResponses;
  }

  public void setMinimalResponses(@javax.annotation.Nullable Inheritance2InheritedBool minimalResponses) {
    this.minimalResponses = minimalResponses;
  }


  public ConfigViewInheritance notify(@javax.annotation.Nullable Inheritance2InheritedBool notify) {
    this.notify = notify;
    return this;
  }

  /**
   * Get notify
   * @return notify
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedBool getNotify() {
    return notify;
  }

  public void setNotify(@javax.annotation.Nullable Inheritance2InheritedBool notify) {
    this.notify = notify;
  }


  public ConfigViewInheritance queryAcl(@javax.annotation.Nullable ConfigInheritedACLItems queryAcl) {
    this.queryAcl = queryAcl;
    return this;
  }

  /**
   * Get queryAcl
   * @return queryAcl
   */
  @javax.annotation.Nullable
  public ConfigInheritedACLItems getQueryAcl() {
    return queryAcl;
  }

  public void setQueryAcl(@javax.annotation.Nullable ConfigInheritedACLItems queryAcl) {
    this.queryAcl = queryAcl;
  }


  public ConfigViewInheritance recursionAcl(@javax.annotation.Nullable ConfigInheritedACLItems recursionAcl) {
    this.recursionAcl = recursionAcl;
    return this;
  }

  /**
   * Get recursionAcl
   * @return recursionAcl
   */
  @javax.annotation.Nullable
  public ConfigInheritedACLItems getRecursionAcl() {
    return recursionAcl;
  }

  public void setRecursionAcl(@javax.annotation.Nullable ConfigInheritedACLItems recursionAcl) {
    this.recursionAcl = recursionAcl;
  }


  public ConfigViewInheritance recursionEnabled(@javax.annotation.Nullable Inheritance2InheritedBool recursionEnabled) {
    this.recursionEnabled = recursionEnabled;
    return this;
  }

  /**
   * Get recursionEnabled
   * @return recursionEnabled
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedBool getRecursionEnabled() {
    return recursionEnabled;
  }

  public void setRecursionEnabled(@javax.annotation.Nullable Inheritance2InheritedBool recursionEnabled) {
    this.recursionEnabled = recursionEnabled;
  }


  public ConfigViewInheritance sortList(@javax.annotation.Nullable ConfigInheritedSortListItems sortList) {
    this.sortList = sortList;
    return this;
  }

  /**
   * Get sortList
   * @return sortList
   */
  @javax.annotation.Nullable
  public ConfigInheritedSortListItems getSortList() {
    return sortList;
  }

  public void setSortList(@javax.annotation.Nullable ConfigInheritedSortListItems sortList) {
    this.sortList = sortList;
  }


  public ConfigViewInheritance synthesizeAddressRecordsFromHttps(@javax.annotation.Nullable Inheritance2InheritedBool synthesizeAddressRecordsFromHttps) {
    this.synthesizeAddressRecordsFromHttps = synthesizeAddressRecordsFromHttps;
    return this;
  }

  /**
   * Get synthesizeAddressRecordsFromHttps
   * @return synthesizeAddressRecordsFromHttps
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedBool getSynthesizeAddressRecordsFromHttps() {
    return synthesizeAddressRecordsFromHttps;
  }

  public void setSynthesizeAddressRecordsFromHttps(@javax.annotation.Nullable Inheritance2InheritedBool synthesizeAddressRecordsFromHttps) {
    this.synthesizeAddressRecordsFromHttps = synthesizeAddressRecordsFromHttps;
  }


  public ConfigViewInheritance transferAcl(@javax.annotation.Nullable ConfigInheritedACLItems transferAcl) {
    this.transferAcl = transferAcl;
    return this;
  }

  /**
   * Get transferAcl
   * @return transferAcl
   */
  @javax.annotation.Nullable
  public ConfigInheritedACLItems getTransferAcl() {
    return transferAcl;
  }

  public void setTransferAcl(@javax.annotation.Nullable ConfigInheritedACLItems transferAcl) {
    this.transferAcl = transferAcl;
  }


  public ConfigViewInheritance updateAcl(@javax.annotation.Nullable ConfigInheritedACLItems updateAcl) {
    this.updateAcl = updateAcl;
    return this;
  }

  /**
   * Get updateAcl
   * @return updateAcl
   */
  @javax.annotation.Nullable
  public ConfigInheritedACLItems getUpdateAcl() {
    return updateAcl;
  }

  public void setUpdateAcl(@javax.annotation.Nullable ConfigInheritedACLItems updateAcl) {
    this.updateAcl = updateAcl;
  }


  public ConfigViewInheritance useForwardersForSubzones(@javax.annotation.Nullable Inheritance2InheritedBool useForwardersForSubzones) {
    this.useForwardersForSubzones = useForwardersForSubzones;
    return this;
  }

  /**
   * Get useForwardersForSubzones
   * @return useForwardersForSubzones
   */
  @javax.annotation.Nullable
  public Inheritance2InheritedBool getUseForwardersForSubzones() {
    return useForwardersForSubzones;
  }

  public void setUseForwardersForSubzones(@javax.annotation.Nullable Inheritance2InheritedBool useForwardersForSubzones) {
    this.useForwardersForSubzones = useForwardersForSubzones;
  }


  public ConfigViewInheritance zoneAuthority(@javax.annotation.Nullable ConfigInheritedZoneAuthority zoneAuthority) {
    this.zoneAuthority = zoneAuthority;
    return this;
  }

  /**
   * Get zoneAuthority
   * @return zoneAuthority
   */
  @javax.annotation.Nullable
  public ConfigInheritedZoneAuthority getZoneAuthority() {
    return zoneAuthority;
  }

  public void setZoneAuthority(@javax.annotation.Nullable ConfigInheritedZoneAuthority zoneAuthority) {
    this.zoneAuthority = zoneAuthority;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigViewInheritance configViewInheritance = (ConfigViewInheritance) o;
    return Objects.equals(this.addEdnsOptionInOutgoingQuery, configViewInheritance.addEdnsOptionInOutgoingQuery) &&
        Objects.equals(this.customRootNsBlock, configViewInheritance.customRootNsBlock) &&
        Objects.equals(this.dnssecValidationBlock, configViewInheritance.dnssecValidationBlock) &&
        Objects.equals(this.dtcConfig, configViewInheritance.dtcConfig) &&
        Objects.equals(this.ecsBlock, configViewInheritance.ecsBlock) &&
        Objects.equals(this.ednsUdpSize, configViewInheritance.ednsUdpSize) &&
        Objects.equals(this.filterAaaaAcl, configViewInheritance.filterAaaaAcl) &&
        Objects.equals(this.filterAaaaOnV4, configViewInheritance.filterAaaaOnV4) &&
        Objects.equals(this.forwardersBlock, configViewInheritance.forwardersBlock) &&
        Objects.equals(this.gssTsigEnabled, configViewInheritance.gssTsigEnabled) &&
        Objects.equals(this.lameTtl, configViewInheritance.lameTtl) &&
        Objects.equals(this.matchRecursiveOnly, configViewInheritance.matchRecursiveOnly) &&
        Objects.equals(this.maxCacheTtl, configViewInheritance.maxCacheTtl) &&
        Objects.equals(this.maxNegativeTtl, configViewInheritance.maxNegativeTtl) &&
        Objects.equals(this.maxUdpSize, configViewInheritance.maxUdpSize) &&
        Objects.equals(this.minimalResponses, configViewInheritance.minimalResponses) &&
        Objects.equals(this.notify, configViewInheritance.notify) &&
        Objects.equals(this.queryAcl, configViewInheritance.queryAcl) &&
        Objects.equals(this.recursionAcl, configViewInheritance.recursionAcl) &&
        Objects.equals(this.recursionEnabled, configViewInheritance.recursionEnabled) &&
        Objects.equals(this.sortList, configViewInheritance.sortList) &&
        Objects.equals(this.synthesizeAddressRecordsFromHttps, configViewInheritance.synthesizeAddressRecordsFromHttps) &&
        Objects.equals(this.transferAcl, configViewInheritance.transferAcl) &&
        Objects.equals(this.updateAcl, configViewInheritance.updateAcl) &&
        Objects.equals(this.useForwardersForSubzones, configViewInheritance.useForwardersForSubzones) &&
        Objects.equals(this.zoneAuthority, configViewInheritance.zoneAuthority);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addEdnsOptionInOutgoingQuery, customRootNsBlock, dnssecValidationBlock, dtcConfig, ecsBlock, ednsUdpSize, filterAaaaAcl, filterAaaaOnV4, forwardersBlock, gssTsigEnabled, lameTtl, matchRecursiveOnly, maxCacheTtl, maxNegativeTtl, maxUdpSize, minimalResponses, notify, queryAcl, recursionAcl, recursionEnabled, sortList, synthesizeAddressRecordsFromHttps, transferAcl, updateAcl, useForwardersForSubzones, zoneAuthority);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigViewInheritance {\n");
    sb.append("    addEdnsOptionInOutgoingQuery: ").append(toIndentedString(addEdnsOptionInOutgoingQuery)).append("\n");
    sb.append("    customRootNsBlock: ").append(toIndentedString(customRootNsBlock)).append("\n");
    sb.append("    dnssecValidationBlock: ").append(toIndentedString(dnssecValidationBlock)).append("\n");
    sb.append("    dtcConfig: ").append(toIndentedString(dtcConfig)).append("\n");
    sb.append("    ecsBlock: ").append(toIndentedString(ecsBlock)).append("\n");
    sb.append("    ednsUdpSize: ").append(toIndentedString(ednsUdpSize)).append("\n");
    sb.append("    filterAaaaAcl: ").append(toIndentedString(filterAaaaAcl)).append("\n");
    sb.append("    filterAaaaOnV4: ").append(toIndentedString(filterAaaaOnV4)).append("\n");
    sb.append("    forwardersBlock: ").append(toIndentedString(forwardersBlock)).append("\n");
    sb.append("    gssTsigEnabled: ").append(toIndentedString(gssTsigEnabled)).append("\n");
    sb.append("    lameTtl: ").append(toIndentedString(lameTtl)).append("\n");
    sb.append("    matchRecursiveOnly: ").append(toIndentedString(matchRecursiveOnly)).append("\n");
    sb.append("    maxCacheTtl: ").append(toIndentedString(maxCacheTtl)).append("\n");
    sb.append("    maxNegativeTtl: ").append(toIndentedString(maxNegativeTtl)).append("\n");
    sb.append("    maxUdpSize: ").append(toIndentedString(maxUdpSize)).append("\n");
    sb.append("    minimalResponses: ").append(toIndentedString(minimalResponses)).append("\n");
    sb.append("    notify: ").append(toIndentedString(notify)).append("\n");
    sb.append("    queryAcl: ").append(toIndentedString(queryAcl)).append("\n");
    sb.append("    recursionAcl: ").append(toIndentedString(recursionAcl)).append("\n");
    sb.append("    recursionEnabled: ").append(toIndentedString(recursionEnabled)).append("\n");
    sb.append("    sortList: ").append(toIndentedString(sortList)).append("\n");
    sb.append("    synthesizeAddressRecordsFromHttps: ").append(toIndentedString(synthesizeAddressRecordsFromHttps)).append("\n");
    sb.append("    transferAcl: ").append(toIndentedString(transferAcl)).append("\n");
    sb.append("    updateAcl: ").append(toIndentedString(updateAcl)).append("\n");
    sb.append("    useForwardersForSubzones: ").append(toIndentedString(useForwardersForSubzones)).append("\n");
    sb.append("    zoneAuthority: ").append(toIndentedString(zoneAuthority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("add_edns_option_in_outgoing_query");
    openapiFields.add("custom_root_ns_block");
    openapiFields.add("dnssec_validation_block");
    openapiFields.add("dtc_config");
    openapiFields.add("ecs_block");
    openapiFields.add("edns_udp_size");
    openapiFields.add("filter_aaaa_acl");
    openapiFields.add("filter_aaaa_on_v4");
    openapiFields.add("forwarders_block");
    openapiFields.add("gss_tsig_enabled");
    openapiFields.add("lame_ttl");
    openapiFields.add("match_recursive_only");
    openapiFields.add("max_cache_ttl");
    openapiFields.add("max_negative_ttl");
    openapiFields.add("max_udp_size");
    openapiFields.add("minimal_responses");
    openapiFields.add("notify");
    openapiFields.add("query_acl");
    openapiFields.add("recursion_acl");
    openapiFields.add("recursion_enabled");
    openapiFields.add("sort_list");
    openapiFields.add("synthesize_address_records_from_https");
    openapiFields.add("transfer_acl");
    openapiFields.add("update_acl");
    openapiFields.add("use_forwarders_for_subzones");
    openapiFields.add("zone_authority");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ConfigViewInheritance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ConfigViewInheritance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConfigViewInheritance is not found in the empty JSON string", ConfigViewInheritance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ConfigViewInheritance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConfigViewInheritance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `add_edns_option_in_outgoing_query`
      if (jsonObj.get("add_edns_option_in_outgoing_query") != null && !jsonObj.get("add_edns_option_in_outgoing_query").isJsonNull()) {
        Inheritance2InheritedBool.validateJsonElement(jsonObj.get("add_edns_option_in_outgoing_query"));
      }
      // validate the optional field `custom_root_ns_block`
      if (jsonObj.get("custom_root_ns_block") != null && !jsonObj.get("custom_root_ns_block").isJsonNull()) {
        ConfigInheritedCustomRootNSBlock.validateJsonElement(jsonObj.get("custom_root_ns_block"));
      }
      // validate the optional field `dnssec_validation_block`
      if (jsonObj.get("dnssec_validation_block") != null && !jsonObj.get("dnssec_validation_block").isJsonNull()) {
        ConfigInheritedDNSSECValidationBlock.validateJsonElement(jsonObj.get("dnssec_validation_block"));
      }
      // validate the optional field `dtc_config`
      if (jsonObj.get("dtc_config") != null && !jsonObj.get("dtc_config").isJsonNull()) {
        ConfigInheritedDtcConfig.validateJsonElement(jsonObj.get("dtc_config"));
      }
      // validate the optional field `ecs_block`
      if (jsonObj.get("ecs_block") != null && !jsonObj.get("ecs_block").isJsonNull()) {
        ConfigInheritedECSBlock.validateJsonElement(jsonObj.get("ecs_block"));
      }
      // validate the optional field `edns_udp_size`
      if (jsonObj.get("edns_udp_size") != null && !jsonObj.get("edns_udp_size").isJsonNull()) {
        Inheritance2InheritedUInt32.validateJsonElement(jsonObj.get("edns_udp_size"));
      }
      // validate the optional field `filter_aaaa_acl`
      if (jsonObj.get("filter_aaaa_acl") != null && !jsonObj.get("filter_aaaa_acl").isJsonNull()) {
        ConfigInheritedACLItems.validateJsonElement(jsonObj.get("filter_aaaa_acl"));
      }
      // validate the optional field `filter_aaaa_on_v4`
      if (jsonObj.get("filter_aaaa_on_v4") != null && !jsonObj.get("filter_aaaa_on_v4").isJsonNull()) {
        Inheritance2InheritedString.validateJsonElement(jsonObj.get("filter_aaaa_on_v4"));
      }
      // validate the optional field `forwarders_block`
      if (jsonObj.get("forwarders_block") != null && !jsonObj.get("forwarders_block").isJsonNull()) {
        ConfigInheritedForwardersBlock.validateJsonElement(jsonObj.get("forwarders_block"));
      }
      // validate the optional field `gss_tsig_enabled`
      if (jsonObj.get("gss_tsig_enabled") != null && !jsonObj.get("gss_tsig_enabled").isJsonNull()) {
        Inheritance2InheritedBool.validateJsonElement(jsonObj.get("gss_tsig_enabled"));
      }
      // validate the optional field `lame_ttl`
      if (jsonObj.get("lame_ttl") != null && !jsonObj.get("lame_ttl").isJsonNull()) {
        Inheritance2InheritedUInt32.validateJsonElement(jsonObj.get("lame_ttl"));
      }
      // validate the optional field `match_recursive_only`
      if (jsonObj.get("match_recursive_only") != null && !jsonObj.get("match_recursive_only").isJsonNull()) {
        Inheritance2InheritedBool.validateJsonElement(jsonObj.get("match_recursive_only"));
      }
      // validate the optional field `max_cache_ttl`
      if (jsonObj.get("max_cache_ttl") != null && !jsonObj.get("max_cache_ttl").isJsonNull()) {
        Inheritance2InheritedUInt32.validateJsonElement(jsonObj.get("max_cache_ttl"));
      }
      // validate the optional field `max_negative_ttl`
      if (jsonObj.get("max_negative_ttl") != null && !jsonObj.get("max_negative_ttl").isJsonNull()) {
        Inheritance2InheritedUInt32.validateJsonElement(jsonObj.get("max_negative_ttl"));
      }
      // validate the optional field `max_udp_size`
      if (jsonObj.get("max_udp_size") != null && !jsonObj.get("max_udp_size").isJsonNull()) {
        Inheritance2InheritedUInt32.validateJsonElement(jsonObj.get("max_udp_size"));
      }
      // validate the optional field `minimal_responses`
      if (jsonObj.get("minimal_responses") != null && !jsonObj.get("minimal_responses").isJsonNull()) {
        Inheritance2InheritedBool.validateJsonElement(jsonObj.get("minimal_responses"));
      }
      // validate the optional field `notify`
      if (jsonObj.get("notify") != null && !jsonObj.get("notify").isJsonNull()) {
        Inheritance2InheritedBool.validateJsonElement(jsonObj.get("notify"));
      }
      // validate the optional field `query_acl`
      if (jsonObj.get("query_acl") != null && !jsonObj.get("query_acl").isJsonNull()) {
        ConfigInheritedACLItems.validateJsonElement(jsonObj.get("query_acl"));
      }
      // validate the optional field `recursion_acl`
      if (jsonObj.get("recursion_acl") != null && !jsonObj.get("recursion_acl").isJsonNull()) {
        ConfigInheritedACLItems.validateJsonElement(jsonObj.get("recursion_acl"));
      }
      // validate the optional field `recursion_enabled`
      if (jsonObj.get("recursion_enabled") != null && !jsonObj.get("recursion_enabled").isJsonNull()) {
        Inheritance2InheritedBool.validateJsonElement(jsonObj.get("recursion_enabled"));
      }
      // validate the optional field `sort_list`
      if (jsonObj.get("sort_list") != null && !jsonObj.get("sort_list").isJsonNull()) {
        ConfigInheritedSortListItems.validateJsonElement(jsonObj.get("sort_list"));
      }
      // validate the optional field `synthesize_address_records_from_https`
      if (jsonObj.get("synthesize_address_records_from_https") != null && !jsonObj.get("synthesize_address_records_from_https").isJsonNull()) {
        Inheritance2InheritedBool.validateJsonElement(jsonObj.get("synthesize_address_records_from_https"));
      }
      // validate the optional field `transfer_acl`
      if (jsonObj.get("transfer_acl") != null && !jsonObj.get("transfer_acl").isJsonNull()) {
        ConfigInheritedACLItems.validateJsonElement(jsonObj.get("transfer_acl"));
      }
      // validate the optional field `update_acl`
      if (jsonObj.get("update_acl") != null && !jsonObj.get("update_acl").isJsonNull()) {
        ConfigInheritedACLItems.validateJsonElement(jsonObj.get("update_acl"));
      }
      // validate the optional field `use_forwarders_for_subzones`
      if (jsonObj.get("use_forwarders_for_subzones") != null && !jsonObj.get("use_forwarders_for_subzones").isJsonNull()) {
        Inheritance2InheritedBool.validateJsonElement(jsonObj.get("use_forwarders_for_subzones"));
      }
      // validate the optional field `zone_authority`
      if (jsonObj.get("zone_authority") != null && !jsonObj.get("zone_authority").isJsonNull()) {
        ConfigInheritedZoneAuthority.validateJsonElement(jsonObj.get("zone_authority"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConfigViewInheritance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConfigViewInheritance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConfigViewInheritance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConfigViewInheritance.class));

       return (TypeAdapter<T>) new TypeAdapter<ConfigViewInheritance>() {
           @Override
           public void write(JsonWriter out, ConfigViewInheritance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConfigViewInheritance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ConfigViewInheritance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ConfigViewInheritance
   * @throws IOException if the JSON string is invalid with respect to ConfigViewInheritance
   */
  public static ConfigViewInheritance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConfigViewInheritance.class);
  }

  /**
   * Convert an instance of ConfigViewInheritance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

