/*
 * DNS Configuration API
 * The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.   
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConfigForwarder;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ConfigCopyForwardZone
 */
public class ConfigCopyForwardZoneTest {
    private final ConfigCopyForwardZone model = new ConfigCopyForwardZone();

    /**
     * Model tests for ConfigCopyForwardZone
     */
    @Test
    public void testConfigCopyForwardZone() {
        // TODO: test ConfigCopyForwardZone
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'externalForwarders'
     */
    @Test
    public void externalForwardersTest() {
        // TODO: test externalForwarders
    }

    /**
     * Test the property 'hosts'
     */
    @Test
    public void hostsTest() {
        // TODO: test hosts
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'internalForwarders'
     */
    @Test
    public void internalForwardersTest() {
        // TODO: test internalForwarders
    }

    /**
     * Test the property 'nsgs'
     */
    @Test
    public void nsgsTest() {
        // TODO: test nsgs
    }

    /**
     * Test the property 'recursive'
     */
    @Test
    public void recursiveTest() {
        // TODO: test recursive
    }

    /**
     * Test the property 'skipOnError'
     */
    @Test
    public void skipOnErrorTest() {
        // TODO: test skipOnError
    }

    /**
     * Test the property 'targetView'
     */
    @Test
    public void targetViewTest() {
        // TODO: test targetView
    }

}
