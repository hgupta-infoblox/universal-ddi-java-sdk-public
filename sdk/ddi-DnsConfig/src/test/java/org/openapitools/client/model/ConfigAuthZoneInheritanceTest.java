/*
 * DNS Configuration API
 * The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.   
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ConfigInheritedACLItems;
import org.openapitools.client.model.ConfigInheritedZoneAuthority;
import org.openapitools.client.model.Inheritance2InheritedBool;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ConfigAuthZoneInheritance
 */
public class ConfigAuthZoneInheritanceTest {
    private final ConfigAuthZoneInheritance model = new ConfigAuthZoneInheritance();

    /**
     * Model tests for ConfigAuthZoneInheritance
     */
    @Test
    public void testConfigAuthZoneInheritance() {
        // TODO: test ConfigAuthZoneInheritance
    }

    /**
     * Test the property 'gssTsigEnabled'
     */
    @Test
    public void gssTsigEnabledTest() {
        // TODO: test gssTsigEnabled
    }

    /**
     * Test the property 'notify'
     */
    @Test
    public void notifyTest() {
        // TODO: test notify
    }

    /**
     * Test the property 'queryAcl'
     */
    @Test
    public void queryAclTest() {
        // TODO: test queryAcl
    }

    /**
     * Test the property 'transferAcl'
     */
    @Test
    public void transferAclTest() {
        // TODO: test transferAcl
    }

    /**
     * Test the property 'updateAcl'
     */
    @Test
    public void updateAclTest() {
        // TODO: test updateAcl
    }

    /**
     * Test the property 'useForwardersForSubzones'
     */
    @Test
    public void useForwardersForSubzonesTest() {
        // TODO: test useForwardersForSubzones
    }

    /**
     * Test the property 'zoneAuthority'
     */
    @Test
    public void zoneAuthorityTest() {
        // TODO: test zoneAuthority
    }

}
