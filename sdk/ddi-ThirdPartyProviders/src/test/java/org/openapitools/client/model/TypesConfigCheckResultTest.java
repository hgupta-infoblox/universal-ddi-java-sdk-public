/*
 * Third Party Providers Configuration API
 * ##### DEPRECATION NOTICE: This API is deprecated for AWS, GCP and Azure and will be removed by February 2024. Please use the V2 CloudDiscoveryProviders APIs instead.  ---   The Third Party Providers configuration is a BloxOne DDI service that provides cloud vendor provider configuration for accessing and syncing the DDI services    Base Paths:  1. provider_integation  :       **_/api/v1/_**  2. cloud_credential,cloud_credential_dynamic,gcp_service_accounts,azure_applications:       **_/api/iam/v1/_**  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TypesConfigCheckResult
 */
public class TypesConfigCheckResultTest {
    private final TypesConfigCheckResult model = new TypesConfigCheckResult();

    /**
     * Model tests for TypesConfigCheckResult
     */
    @Test
    public void testTypesConfigCheckResult() {
        // TODO: test TypesConfigCheckResult
    }

    /**
     * Test the property 'additionalInfo'
     */
    @Test
    public void additionalInfoTest() {
        // TODO: test additionalInfo
    }

    /**
     * Test the property 'configCheckType'
     */
    @Test
    public void configCheckTypeTest() {
        // TODO: test configCheckType
    }

    /**
     * Test the property 'resourceUri'
     */
    @Test
    public void resourceUriTest() {
        // TODO: test resourceUri
    }

    /**
     * Test the property 'resultCode'
     */
    @Test
    public void resultCodeTest() {
        // TODO: test resultCode
    }

}
